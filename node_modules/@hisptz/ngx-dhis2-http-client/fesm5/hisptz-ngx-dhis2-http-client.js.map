{"version":3,"file":"hisptz-ngx-dhis2-http-client.js.map","sources":["ng://@hisptz/ngx-dhis2-http-client/lib/services/manifest.service.ts","ng://@hisptz/ngx-dhis2-http-client/lib/services/system-info.service.ts","ng://@hisptz/ngx-dhis2-http-client/lib/services/ngx-dhis2-http-client.service.ts","ng://@hisptz/ngx-dhis2-http-client/lib/services/index.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Manifest } from '../models';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError, map } from 'rxjs/internal/operators';\n\n@Injectable({providedIn: 'root'})\nexport class ManifestService {\n  private _manifest: Manifest;\n  private _defaultRootUrl: string;\n  private _manifestLoaded: boolean;\n\n  constructor(private httpClient: HttpClient) {\n    this._defaultRootUrl = '../../../';\n    this._manifestLoaded = false;\n  }\n\n  public getManifest(): Observable<Manifest> {\n    return this._manifestLoaded ? of(this._manifest) : this.httpClient.get<Manifest>('manifest.webapp').pipe(\n      catchError(() => {\n        console.warn('Manifest file could not be loaded, default options have been used instead');\n        return of(null);\n      }),\n      tap((manifest) => {\n        this._manifest = manifest;\n        this._manifestLoaded = true;\n      }));\n  }\n\n  public getRootUrl(): Observable<string> {\n    return this.getManifest().pipe(map((manifest: Manifest) => {\n      if (!manifest) {\n        return this._defaultRootUrl;\n      }\n      return manifest.activities && manifest.activities.dhis && manifest.activities.dhis.href ?\n        manifest.activities.dhis.href : this._defaultRootUrl;\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { ManifestService } from './manifest.service';\nimport { map, switchMap, tap } from 'rxjs/internal/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({providedIn: 'root'})\nexport class SystemInfoService {\n  private _systemInfoLoaded: boolean;\n  private _systemInfo: any;\n\n  constructor(private manifestService: ManifestService, private httpClient: HttpClient) {\n    this._systemInfoLoaded = false;\n  }\n\n  getSystemInfo(): Observable<any> {\n    return this._systemInfoLoaded ? of(this._systemInfo) :\n      this.manifestService.getRootUrl().pipe(\n        switchMap((rootUrl: string) => forkJoin(this.httpClient.get(`${rootUrl}api/system/info`),\n          this.httpClient.get(`${rootUrl}api/systemSettings`)).pipe(map((res: any[]) => {\n          return {...res[0], ...res[1]};\n        }), tap((systemInfo: any) => {\n          this._systemInfo = systemInfo;\n          this._systemInfoLoaded = true;\n        }))));\n  }\n\n  public getSystemVersion(): Observable<number> {\n    return this.getSystemInfo().pipe(map((systemInfo: any) => {\n      if (!systemInfo) {\n        return 0;\n      }\n      const splitedVersion = systemInfo.version ? systemInfo.version.split('.') : [];\n      return parseInt(splitedVersion[1], 10) || 0;\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ManifestService } from './manifest.service';\nimport { SystemInfoService } from './system-info.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/internal/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class NgxDhis2HttpClientService {\n  constructor(\n    private httpClient: HttpClient,\n    private manifestService: ManifestService,\n    private systemInfoService: SystemInfoService\n  ) {}\n\n  get(\n    url: string,\n    includeVersionNumber: boolean = false,\n    preferPreviousApiVersion: boolean = false,\n    useRootUrl: boolean = false\n  ): Observable<any> {\n    const rootUrlPromise = useRootUrl\n      ? this.manifestService.getRootUrl()\n      : this._getApiRootUrl(includeVersionNumber, preferPreviousApiVersion);\n\n    return rootUrlPromise.pipe(\n      mergeMap(rootUrl =>\n        this.httpClient.get(rootUrl + url).pipe(catchError(this._handleError))\n      ),\n      catchError(this._handleError)\n    );\n  }\n\n  post(\n    url: string,\n    data: any,\n    includeVersionNumber: boolean = false,\n    preferPreviousApiVersion: boolean = false,\n    useRootUrl: boolean = false,\n    headerOptions?: any\n  ) {\n    const rootUrlPromise = useRootUrl\n      ? this.manifestService.getRootUrl()\n      : this._getApiRootUrl(includeVersionNumber, preferPreviousApiVersion);\n    return rootUrlPromise.pipe(\n      mergeMap(rootUrl =>\n        this.httpClient\n          .post(rootUrl + url, data)\n          .pipe(catchError(this._handleError))\n      ),\n      catchError(this._handleError)\n    );\n  }\n\n  put(\n    url: string,\n    data: any,\n    includeVersionNumber: boolean = false,\n    preferPreviousApiVersion: boolean = false,\n    useRootUrl: boolean = false\n  ) {\n    const rootUrlPromise = useRootUrl\n      ? this.manifestService.getRootUrl()\n      : this._getApiRootUrl(includeVersionNumber, preferPreviousApiVersion);\n\n    return rootUrlPromise.pipe(\n      mergeMap(rootUrl =>\n        this.httpClient\n          .put(rootUrl + url, data)\n          .pipe(catchError(this._handleError))\n      ),\n      catchError(this._handleError)\n    );\n  }\n\n  delete(\n    url: string,\n    includeVersionNumber: boolean = false,\n    preferPreviousApiVersion: boolean = false,\n    useRootUrl: boolean = false\n  ) {\n    const rootUrlPromise = useRootUrl\n      ? this.manifestService.getRootUrl()\n      : this._getApiRootUrl(includeVersionNumber, preferPreviousApiVersion);\n\n    return rootUrlPromise.pipe(\n      mergeMap(rootUrl =>\n        this.httpClient\n          .delete(rootUrl + url)\n          .pipe(catchError(this._handleError))\n      ),\n      catchError(this._handleError)\n    );\n  }\n\n  // private methods\n  private _handleError(err: HttpErrorResponse) {\n    let error = null;\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      error = {\n        message: err.error,\n        status: err.status,\n        statusText: err.statusText\n      };\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      error = {\n        message:\n          err.error instanceof Object\n            ? err.error.message\n            : err.error || err.message,\n        status: err.status,\n        statusText: err.statusText\n      };\n    }\n    return throwError(error);\n  }\n\n  private _getApiRootUrl(\n    includeVersionNumber: boolean = false,\n    preferPreviousVersion: boolean = false\n  ) {\n    const rootUrlPromise = this.manifestService.getRootUrl().pipe(\n      switchMap(rootUrl =>\n        this.systemInfoService.getSystemVersion().pipe(\n          map((version: number) => {\n            return {\n              rootUrl,\n              version: version - 1 <= 25 ? version + 1 : version\n            };\n          })\n        )\n      )\n    );\n    return rootUrlPromise.pipe(\n      map(\n        (urlInfo: { rootUrl: string; version: number }) =>\n          `${urlInfo.rootUrl}api/${\n            includeVersionNumber && !preferPreviousVersion\n              ? urlInfo.version + '/'\n              : preferPreviousVersion\n                ? urlInfo.version\n                  ? urlInfo.version - 1 + '/'\n                  : ''\n                : ''\n          }`\n      )\n    );\n  }\n}\n","import { ManifestService } from './manifest.service';\nimport { SystemInfoService } from './system-info.service';\nimport { NgxDhis2HttpClientService } from './ngx-dhis2-http-client.service';\n\nexport const services: any[] = [ManifestService, SystemInfoService, NgxDhis2HttpClientService];\n\nexport * from './manifest.service';\nexport * from './system-info.service';\nexport * from './ngx-dhis2-http-client.service';\n"],"names":[],"mappings":"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"}
