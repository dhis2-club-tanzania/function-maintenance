/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { getTableConfiguration } from '../../helpers/index';
var TableListComponent = /** @class */ (function () {
    function TableListComponent() {
        this.tableLayers = [];
    }
    /**
     * @return {?}
     */
    TableListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.visualizationLayers && this.visualizationLayers.length > 0) {
            this.tableLayers = this.visualizationLayers.map(function (layer) {
                return {
                    tableConfiguration: getTableConfiguration(layer.config || {}, layer.layout, _this.visualizationType),
                    analyticsObject: layer.analytics
                };
            });
        }
    };
    TableListComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'ngx-dhis2-table-list',
                    template: "<div class=\"row\">\n    <div class=\"col-12\" *ngFor=\"let tableLayer of tableLayers\">\n        <ngx-dhis2-table-item [analyticsObject]=\"tableLayer.analyticsObject\" [tableConfiguration]=\"tableLayer.tableConfiguration\">\n        </ngx-dhis2-table-item>\n    </div>\n</div>",
                    styles: [""]
                },] },
    ];
    /** @nocollapse */
    TableListComponent.ctorParameters = function () { return []; };
    TableListComponent.propDecorators = {
        visualizationLayers: [{ type: Input }],
        visualizationType: [{ type: Input }]
    };
    return TableListComponent;
}());
export { TableListComponent };
function TableListComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    TableListComponent.prototype.visualizationLayers;
    /** @type {?} */
    TableListComponent.prototype.visualizationType;
    /** @type {?} */
    TableListComponent.prototype.tableLayers;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGlzcHR6L25neC1kaGlzMi10YWJsZS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhYmxlLWxpc3QvdGFibGUtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBR3pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOztJQW1CMUQ7MkJBREssRUFBRTtLQUNTOzs7O0lBRWhCLHFDQUFROzs7SUFBUjtRQUFBLGlCQWFDO1FBWkMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwRSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsVUFBQyxLQUFVO2dCQUN6RCxNQUFNLENBQUM7b0JBQ0wsa0JBQWtCLEVBQUUscUJBQXFCLENBQ3ZDLEtBQUssQ0FBQyxNQUFNLElBQUksRUFBRSxFQUNsQixLQUFLLENBQUMsTUFBTSxFQUNaLEtBQUksQ0FBQyxpQkFBaUIsQ0FDdkI7b0JBQ0QsZUFBZSxFQUFFLEtBQUssQ0FBQyxTQUFTO2lCQUNqQyxDQUFDO2FBQ0gsQ0FBQyxDQUFDO1NBQ0o7S0FDRjs7Z0JBakNGLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsUUFBUSxFQUFFLHVSQUtMO29CQUNMLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztpQkFDYjs7Ozs7c0NBRUUsS0FBSztvQ0FDTCxLQUFLOzs2QkFqQlI7O1NBZWEsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYWJsZUNvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi8uLi9tb2RlbHMvdGFibGUtY29uZmlndXJhdGlvbic7XG5cbmltcG9ydCB7IGdldFRhYmxlQ29uZmlndXJhdGlvbiB9IGZyb20gJy4uLy4uL2hlbHBlcnMvaW5kZXgnO1xuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICduZ3gtZGhpczItdGFibGUtbGlzdCcsXG4gIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgIDxkaXYgY2xhc3M9XCJjb2wtMTJcIiAqbmdGb3I9XCJsZXQgdGFibGVMYXllciBvZiB0YWJsZUxheWVyc1wiPlxuICAgICAgICA8bmd4LWRoaXMyLXRhYmxlLWl0ZW0gW2FuYWx5dGljc09iamVjdF09XCJ0YWJsZUxheWVyLmFuYWx5dGljc09iamVjdFwiIFt0YWJsZUNvbmZpZ3VyYXRpb25dPVwidGFibGVMYXllci50YWJsZUNvbmZpZ3VyYXRpb25cIj5cbiAgICAgICAgPC9uZ3gtZGhpczItdGFibGUtaXRlbT5cbiAgICA8L2Rpdj5cbjwvZGl2PmAsXG4gIHN0eWxlczogW2BgXVxufSlcbmV4cG9ydCBjbGFzcyBUYWJsZUxpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSB2aXN1YWxpemF0aW9uTGF5ZXJzOiBhbnlbXTtcbiAgQElucHV0KCkgdmlzdWFsaXphdGlvblR5cGU6IHN0cmluZztcbiAgdGFibGVMYXllcnM6IEFycmF5PHtcbiAgICB0YWJsZUNvbmZpZ3VyYXRpb246IFRhYmxlQ29uZmlndXJhdGlvbjtcbiAgICBhbmFseXRpY3NPYmplY3Q6IGFueTtcbiAgfT4gPSBbXTtcbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnZpc3VhbGl6YXRpb25MYXllcnMgJiYgdGhpcy52aXN1YWxpemF0aW9uTGF5ZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMudGFibGVMYXllcnMgPSB0aGlzLnZpc3VhbGl6YXRpb25MYXllcnMubWFwKChsYXllcjogYW55KSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdGFibGVDb25maWd1cmF0aW9uOiBnZXRUYWJsZUNvbmZpZ3VyYXRpb24oXG4gICAgICAgICAgICBsYXllci5jb25maWcgfHwge30sXG4gICAgICAgICAgICBsYXllci5sYXlvdXQsXG4gICAgICAgICAgICB0aGlzLnZpc3VhbGl6YXRpb25UeXBlXG4gICAgICAgICAgKSxcbiAgICAgICAgICBhbmFseXRpY3NPYmplY3Q6IGxheWVyLmFuYWx5dGljc1xuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59XG4iXX0=