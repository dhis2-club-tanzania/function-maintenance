{"version":3,"sources":["null","ng://@hisptz/ngx-dhis2-table/lib/helpers/draw-table.helper.ts","ng://@hisptz/ngx-dhis2-table/lib/components/table-list/table-list.component.ts","ng://@hisptz/ngx-dhis2-table/lib/helpers/get-table-configuration.helper.ts","ng://@hisptz/ngx-dhis2-table/lib/components/table-item/table-item.component.ts","ng://@hisptz/ngx-dhis2-table/lib/ngx-dhis2-table.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","getTitleIndex","analyticsObjectHeaders","name","index","counter","analyticsObjectHeaders_1","tslib_1.__values","analyticsObjectHeaders_1_1","calculateColSpan","analyticsObject","array","item","indexOfItem","indexOf","dimensions","col_span","duplication","arr","prepareSingleCategories","initialAnalytics","itemIdentifier","preDefinedItems","sanitizeIncomingAnalytics","structure","_a","getMetadataArray","metadataType","metadataArray","metaData","dx","ou","co","pe","_b","val","push","names","uid","type","preDefinedItems_1","preDefinedItems_1_1","getDataValue","dataItems","num","rows","dataItems_1","dataItems_1_1","headers","isNaN","parseFloat","getDataValueColor","legendClasses","color","forEach","legendClass","startValue","endValue","checkZeros","stating_length","checker","TableListComponent","prototype","ngOnInit","_this","this","visualizationLayers","tableLayers","map","layer","tableConfiguration","getTableConfiguration","favoriteObject","visualizationLayout","title","hasOwnProperty","displayName","subtitle","showColumnTotal","colTotal","showColumnSubtotal","colSubtotal","showRowTotal","rowTotal","showRowSubtotal","rowSubtotal","showDimensionLabels","hideEmptyRows","showHierarchy","displayList","checkForEventDataType","favoriteType","dataType","columns","legendSet","styles","config","layout","visualizationType","analytics","Component","args","selector","template","Input","TableItemComponent","tableObject","drawTable","legends","table","titles","column","titlesAvailable","hasParentOu","items","style","span","_d","_e","column_items","_f","_g","col","display","row_span","_k","_l","_o","_p","_r","_s","columnItem","dimension","currentColumnItems","headerItem","currentColumnItems_1","currentColumnItems_1_1","currentItem","id","_v","_w","rowItem","column_length","column_items_array","currentRowItems","table_columns_array","_y","_z","temp_arr","concat","temp_arr_1","temp_arr_1_1","_1","_2","Array","tempArr","from","rows_length","row_items_array","table_rows_array","_5","_6","temp_arr_2","temp_arr_2_1","_8","_9","table_rows_array_1","table_rows_array_1_1","rowItem_1","rowItem_1_1","header","table_columns_array_1","table_columns_array_1_1","colItem","dataItem","rowItem_2","rowItem_2_1","colItem_1","colItem_1_1","table_columns_array_2","table_columns_array_2_1","colItem_2","colItem_2_1","sortData","n","isLastItem","current_sorting","switching","x","y","shouldSwitch","dir","switchcount","document","getElementById","getElementsByTagName","innerHTML","toLowerCase","sort_direction","parentNode","insertBefore","NgxDhis2TableModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { TableConfiguration } from '../models/table-configuration';\nexport function drawTable(\n  analyticsObject,\n  tableConfiguration: TableConfiguration\n) {\n  const legendClasses = tableConfiguration.legendSet\n    ? tableConfiguration.legendSet.legends\n    : null;\n\n  const table = {\n    headers: [],\n    columns: [],\n    rows: [],\n    titles: {\n      rows: [],\n      column: []\n    },\n    titlesAvailable: false,\n    hasParentOu: false\n  };\n  if (tableConfiguration.hasOwnProperty('title')) {\n    table['title'] = tableConfiguration.title;\n  }\n  if (tableConfiguration.hasOwnProperty('subtitle')) {\n    table['subtitle'] = tableConfiguration.subtitle;\n  }\n  if (tableConfiguration.displayList) {\n    table.headers[0] = {\n      items: [],\n      style: ''\n    };\n    tableConfiguration.columns[tableConfiguration.columns.indexOf('pe')] =\n      'eventdate';\n    tableConfiguration.columns[tableConfiguration.columns.indexOf('ou')] =\n      'ouname';\n    for (const item of tableConfiguration.columns) {\n      table.headers[0].items.push({\n        name:\n          analyticsObject.headers[getTitleIndex(analyticsObject.headers, item)]\n            .column,\n        span: 1\n      });\n    }\n    for (const item of analyticsObject.rows) {\n      const column_items = [];\n      for (const col of tableConfiguration.columns) {\n        const index = getTitleIndex(analyticsObject.headers, col);\n        column_items.push({\n          name: '',\n          display: true,\n          row_span: '1',\n          // color:getColor(item[index],)\n          val: item[index]\n        });\n      }\n      table.rows.push({\n        headers: [],\n        items: column_items\n      });\n    }\n  } else {\n    // add names to titles array\n    if (tableConfiguration.showDimensionLabels) {\n      table.titlesAvailable = true;\n      for (const item of tableConfiguration.columns) {\n        table.titles.column.push(\n          analyticsObject.headers[getTitleIndex(analyticsObject.headers, item)]\n            .column\n        );\n      }\n      for (const item of tableConfiguration.rows) {\n        table.titles.rows.push(\n          analyticsObject.headers[getTitleIndex(analyticsObject.headers, item)]\n            .column\n        );\n      }\n    }\n    for (const columnItem of tableConfiguration.columns) {\n      const dimension = calculateColSpan(\n        analyticsObject,\n        tableConfiguration.columns,\n        columnItem\n      );\n      const currentColumnItems = prepareSingleCategories(\n        analyticsObject,\n        columnItem\n      );\n      const headerItem = [];\n      for (let i = 0; i < dimension.duplication; i++) {\n        for (const currentItem of currentColumnItems) {\n          headerItem.push({\n            name: currentItem.name,\n            span: dimension.col_span,\n            type: currentItem.type,\n            id: currentItem.uid\n          });\n        }\n      }\n      let styles = '';\n      if (tableConfiguration.hasOwnProperty('style')) {\n        if (tableConfiguration.styles.hasOwnProperty(columnItem)) {\n          styles = tableConfiguration.styles[columnItem];\n        }\n      }\n      table.headers.push({ items: headerItem, style: styles });\n    }\n    for (const rowItem of tableConfiguration.rows) {\n      table.columns.push(rowItem);\n    }\n\n    // Preparing table columns\n    const column_length = tableConfiguration.columns.length;\n    const column_items_array = [];\n    for (let i = 0; i < column_length; i++) {\n      const currentRowItems = prepareSingleCategories(\n        analyticsObject,\n        tableConfiguration.columns[i]\n      );\n      column_items_array.push(currentRowItems);\n    }\n    let table_columns_array = [];\n    for (let i = 0; i < column_items_array.length; i++) {\n      if (table_columns_array.length === 0) {\n        for (const item of column_items_array[i]) {\n          table_columns_array.push([item]);\n        }\n      } else {\n        const temp_arr = table_columns_array.concat();\n        table_columns_array = [];\n        for (const item of temp_arr) {\n          for (const val of column_items_array[i]) {\n            if (item instanceof Array) {\n              const tempArr = Array.from(item);\n              table_columns_array.push(tempArr.concat([val]));\n            } else {\n              table_columns_array.push([item, val]);\n            }\n          }\n        }\n      }\n    }\n\n    // Preparing table rows\n    const rows_length = tableConfiguration.rows.length;\n    const row_items_array = [];\n    for (let i = 0; i < rows_length; i++) {\n      const dimension = calculateColSpan(\n        analyticsObject,\n        tableConfiguration.rows,\n        tableConfiguration.rows[i]\n      );\n      const currentRowItems = prepareSingleCategories(\n        analyticsObject,\n        tableConfiguration.rows[i]\n      );\n      row_items_array.push({ items: currentRowItems, dimensions: dimension });\n    }\n    let table_rows_array = [];\n    for (let i = 0; i < row_items_array.length; i++) {\n      if (table_rows_array.length === 0) {\n        for (const item of row_items_array[i].items) {\n          item.dimensions = row_items_array[i].dimensions;\n          table_rows_array.push([item]);\n        }\n      } else {\n        const temp_arr = table_rows_array.concat();\n        table_rows_array = [];\n        for (const item of temp_arr) {\n          for (const val of row_items_array[i].items) {\n            val.dimensions = row_items_array[i].dimensions;\n            if (item instanceof Array) {\n              const tempArr = Array.from(item);\n              table_rows_array.push(tempArr.concat([val]));\n            } else {\n              table_rows_array.push([item, val]);\n            }\n          }\n        }\n      }\n    }\n\n    let counter = 0;\n    if (table_rows_array.length !== 0) {\n      for (const rowItem of table_rows_array) {\n        const item = {\n          items: [],\n          headers: rowItem\n        };\n        for (const val of rowItem) {\n          if (counter === 0 || counter % val.dimensions.col_span === 0) {\n            item.items.push({\n              type: val.type,\n              name: val.uid,\n              val: val.name,\n              row_span: val.dimensions.col_span,\n              header: true\n            });\n          }\n        }\n        for (const colItem of table_columns_array) {\n          const dataItem = [];\n          for (const val of rowItem) {\n            dataItem.push({ type: val.type, value: val.uid });\n          }\n          for (const val of colItem) {\n            dataItem.push({ type: val.type, value: val.uid });\n          }\n          item.items.push({\n            name: '',\n            val: getDataValue(analyticsObject, dataItem),\n            color: getDataValueColor(\n              legendClasses,\n              getDataValue(analyticsObject, dataItem)\n            ),\n            row_span: '1',\n            display: true\n          });\n        }\n        if (\n          tableConfiguration.hasOwnProperty('hideEmptyRows') &&\n          tableConfiguration.hideEmptyRows\n        ) {\n          if (!checkZeros(tableConfiguration.rows.length, item.items)) {\n            table.rows.push(item);\n          }\n        } else {\n          table.rows.push(item);\n        }\n\n        counter++;\n      }\n    } else {\n      const item = {\n        items: [],\n        headers: []\n      };\n      for (const colItem of table_columns_array) {\n        const dataItem = [];\n        for (const val of colItem) {\n          dataItem.push({ type: val.type, value: val.uid });\n        }\n        item.items.push({\n          name: '',\n          val: getDataValue(analyticsObject, dataItem),\n          row_span: '1',\n          display: true\n        });\n      }\n      if (\n        tableConfiguration.hasOwnProperty('hideEmptyRows') &&\n        tableConfiguration.hideEmptyRows\n      ) {\n        if (!checkZeros(tableConfiguration.rows.length, item.items)) {\n          table.rows.push(item);\n        }\n      } else {\n        table.rows.push(item);\n      }\n    }\n  }\n\n  // todo improve total options to also work for event table\n  // return _getSanitizedTableObject(table, tableConfiguration);\n  return table;\n}\n\nfunction getTitleIndex(analyticsObjectHeaders, name: string) {\n  let index = 0;\n  let counter = 0;\n  for (const header of analyticsObjectHeaders) {\n    if (header.name === name) {\n      index = counter;\n    }\n    counter++;\n  }\n  return index;\n}\n\nfunction calculateColSpan(analyticsObject, array, item) {\n  const indexOfItem = array.indexOf(item);\n  const array_length = array.length;\n  const last_index = array_length - 1;\n  const dimensions = { col_span: 1, duplication: 1 };\n  for (let i = last_index; i > indexOfItem; i--) {\n    const arr = prepareSingleCategories(analyticsObject, array[i]);\n    dimensions.col_span = dimensions.col_span * arr.length;\n  }\n  for (let i = 0; i < indexOfItem; i++) {\n    const arr = prepareSingleCategories(analyticsObject, array[i]);\n    dimensions.duplication = dimensions.duplication * arr.length;\n  }\n  return dimensions;\n}\n\nfunction prepareSingleCategories(\n  initialAnalytics,\n  itemIdentifier,\n  preDefinedItems = []\n) {\n  const analyticsObject = sanitizeIncomingAnalytics(initialAnalytics);\n  const structure = [];\n  if (preDefinedItems.length === 0) {\n    for (const val of getMetadataArray(analyticsObject, itemIdentifier)) {\n      structure.push({\n        name: analyticsObject.metaData.names[val],\n        uid: val,\n        type: itemIdentifier\n      });\n    }\n  }\n  if (preDefinedItems.length !== 0) {\n    for (const val of preDefinedItems) {\n      structure.push({\n        name: analyticsObject.metaData.names[val],\n        uid: val,\n        type: itemIdentifier\n      });\n    }\n  }\n  return structure;\n}\n\nfunction sanitizeIncomingAnalytics(analyticsObject: any) {\n  return analyticsObject;\n}\n\nfunction getMetadataArray(analyticsObject, metadataType: string) {\n  let metadataArray = [];\n  if (metadataType === 'dx') {\n    metadataArray = analyticsObject.metaData.dx;\n  } else if (metadataType === 'ou') {\n    metadataArray = analyticsObject.metaData.ou;\n  } else if (metadataType === 'co') {\n    metadataArray = analyticsObject.metaData.co;\n  } else if (metadataType === 'pe') {\n    metadataArray = analyticsObject.metaData.pe;\n  } else {\n    metadataArray = analyticsObject.metaData[metadataType];\n  }\n  return metadataArray;\n}\n\nfunction getDataValue(analyticsObject, dataItems = []) {\n  let num = null;\n  for (const value of analyticsObject.rows) {\n    let counter = 0;\n    for (const item of dataItems) {\n      if (\n        value[getTitleIndex(analyticsObject.headers, item.type)] === item.value\n      ) {\n        counter++;\n      }\n    }\n    if (counter === dataItems.length) {\n      if (isNaN(value[getTitleIndex(analyticsObject.headers, 'value')])) {\n        num = value[getTitleIndex(analyticsObject.headers, 'value')];\n      } else {\n        num += parseFloat(\n          value[getTitleIndex(analyticsObject.headers, 'value')]\n        );\n      }\n    }\n  }\n  return num;\n}\n\nfunction getDataValueColor(legendClasses, value) {\n  let color = '';\n  if (!isNaN(value) && legendClasses) {\n    legendClasses.forEach(legendClass => {\n      if (legendClass.startValue <= value && legendClass.endValue > value) {\n        color = legendClass.color;\n      }\n\n      // if (legendClass.startValue < value && legendClass.endValue >= value) {\n      \n      // }\n    });\n  }\n  return color;\n}\n\nfunction checkZeros(stating_length, array): boolean {\n  let checker = true;\n  for (let i = stating_length; i < array.length; i++) {\n    if (array[i].name === '' && array[i].val != null) {\n      checker = false;\n    }\n  }\n  return checker;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TableConfiguration } from '../../models/table-configuration';\n\nimport { getTableConfiguration } from '../../helpers/index';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-dhis2-table-list',\n  template: `<div class=\"row\">\n    <div class=\"col-12\" *ngFor=\"let tableLayer of tableLayers\">\n        <ngx-dhis2-table-item [analyticsObject]=\"tableLayer.analyticsObject\" [tableConfiguration]=\"tableLayer.tableConfiguration\">\n        </ngx-dhis2-table-item>\n    </div>\n</div>`,\n  styles: [``]\n})\nexport class TableListComponent implements OnInit {\n  @Input() visualizationLayers: any[];\n  @Input() visualizationType: string;\n  tableLayers: Array<{\n    tableConfiguration: TableConfiguration;\n    analyticsObject: any;\n  }> = [];\n  constructor() {}\n\n  ngOnInit() {\n    if (this.visualizationLayers && this.visualizationLayers.length > 0) {\n      this.tableLayers = this.visualizationLayers.map((layer: any) => {\n        return {\n          tableConfiguration: getTableConfiguration(\n            layer.config || {},\n            layer.layout,\n            this.visualizationType\n          ),\n          analyticsObject: layer.analytics\n        };\n      });\n    }\n  }\n}\n","import { TableConfiguration } from '../models/table-configuration';\nexport function getTableConfiguration(\n  favoriteObject: any,\n  visualizationLayout: any,\n  type: string\n): TableConfiguration {\n  return {\n    title: favoriteObject.hasOwnProperty('displayName')\n      ? favoriteObject.displayName\n      : favoriteObject.hasOwnProperty('name')\n        ? favoriteObject.name\n        : '',\n    subtitle: favoriteObject.hasOwnProperty('subtitle')\n      ? favoriteObject.subtitle\n      : '',\n    showColumnTotal: favoriteObject.hasOwnProperty('colTotal')\n      ? favoriteObject.colTotal\n      : true,\n    showColumnSubtotal: favoriteObject.hasOwnProperty('colSubtotal')\n      ? favoriteObject.colSubtotal\n      : true,\n    showRowTotal: favoriteObject.hasOwnProperty('rowTotal')\n      ? favoriteObject.rowTotal\n      : true,\n    showRowSubtotal: favoriteObject.hasOwnProperty('rowSubtotal')\n      ? favoriteObject.rowSubtotal\n      : true,\n    showDimensionLabels: favoriteObject.hasOwnProperty('showDimensionLabels')\n      ? favoriteObject.showDimensionLabels\n      : true,\n    hideEmptyRows: favoriteObject.hasOwnProperty('hideEmptyRows')\n      ? favoriteObject.hideEmptyRows\n      : true,\n    showHierarchy: favoriteObject.hasOwnProperty('showHierarchy')\n      ? favoriteObject.showHierarchy\n      : true,\n    displayList: checkForEventDataType(favoriteObject, type),\n    rows: visualizationLayout.rows ? visualizationLayout.rows : ['pe'],\n    columns: visualizationLayout.columns ? visualizationLayout.columns : ['dx'],\n    legendSet: favoriteObject.legendSet || null,\n    styles: null\n  };\n}\n\nfunction checkForEventDataType(favoriteObject, favoriteType): boolean {\n  let displayList = false;\n  if (favoriteType === 'EVENT_REPORT') {\n    if (\n      favoriteObject.hasOwnProperty('dataType') &&\n      favoriteObject.dataType === 'EVENTS'\n    ) {\n      displayList = true;\n    }\n  }\n  return displayList;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TableConfiguration } from '../../models/table-configuration';\n\nimport { drawTable } from '../../helpers/index';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-dhis2-table-item',\n  template: `<div class=\"row\">\n    <div class=\"col-md-12\" *ngIf=\"tableObject\">\n        <h5 style=\"margin-top: 80px\" class=\"text-center\" *ngIf=\"tableObject.rows.length == 0\"> No data to display</h5>\n\n        <div *ngIf=\"tableObject\" style=\"padding: 3px\">\n            <!--<h4 *ngIf=\"tableObject.rows.length != 0\" class=\"text-center\" style=\"margin-bottom: 0px\">{{tableObject?.title}}</h4>-->\n            <table class=\"table table-bordered table-responsive table-condensed custom-table\" *ngIf=\"tableObject.rows.length != 0\">\n                <thead>\n                    <!--title-->\n                    <tr class=\"table-title\">\n                        <th [attr.colspan]=\"tableObject.rows[0].items.length\">\n                            <h4 style=\"margin: 0px\" class=\"text-center\">{{tableObject.subtitle}} </h4>\n                        </th>\n                    </tr>\n                    <!--headers-->\n                    <tr *ngFor=\"let header of tableObject.headers; let j = index\" class=\"header-column\">\n                        <th *ngIf=\"tableObject.hasParentOu\"></th>\n                        <th *ngFor=\"let table_column of tableObject.columns; let i = index\" style=\"text-align: center\">\n                            <span *ngIf=\"i==tableObject.columns.length-1 && j==tableObject.headers.length-1 && tableObject.titlesAvailable\">{{ tableObject.titles.rows[i] }} / {{ tableObject.titles.column[j]}}</span>\n                            <span *ngIf=\"i != tableObject.columns.length-1\">{{ tableObject.titles.rows[i] }}</span>\n                            <span *ngIf=\"j != tableObject.headers.length-1\">{{ tableObject.titles.column[j] }}</span>\n                        </th>\n                        <th *ngFor=\"let header_column of header.items; let i=index\" [colSpan]=\"header_column.span\" style=\"text-align: center\" (click)=\"sortData(tableObject,i+tableObject.columns.length,j+1==tableObject.headers.length)\">\n                            {{ header_column.name }}\n                            <span *ngIf=\"j+1==tableObject.headers.length && current_sorting[i+tableObject.columns.length] && sort_direction[i+tableObject.columns.length] == 'asc'\" class=\"glyphicon glyphicon-triangle-top pull-right\"></span>\n                            <span *ngIf=\"j+1==tableObject.headers.length && current_sorting[i+tableObject.columns.length] && sort_direction[i+tableObject.columns.length] == 'desc'\" class=\"glyphicon glyphicon-triangle-bottom pull-right\"></span>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody id=\"myPivotTable\">\n                    <tr *ngFor=\"let row of tableObject.rows\" [ngClass]=\"{'sub-total': row.sub_total}\">\n                        <td *ngFor=\"let header_column of row.items;let i = index\" [ngClass]=\"{'header-column': header_column.name != ''}\" style=\"text-align: center;vertical-align: middle\" [attr.rowspan]=\"header_column.row_span\" [style.background]=\"header_column.color\">\n                            {{ header_column.val }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n\n        </div>\n    </div>\n</div>`,\n  styles: [`.table-item-container{overflow:hidden}.custom-table{display:table;border-style:none!important;width:100%}.custom-table td,.custom-table th{border:thin solid #f1f1f1}.custom-table>tbody>tr>td,.custom-table>thead>tr>th{font-size:13px!important}table tr th{background-color:rgba(238,238,238,.29);padding:4px;text-align:center}table tr td{padding:4px}table tr td:first-child{background-color:rgba(238,238,238,.29)}.table-title{font-size:13px;font-weight:600;text-align:center}`]\n})\nexport class TableItemComponent implements OnInit {\n  @Input() tableConfiguration: TableConfiguration;\n  @Input() analyticsObject: any;\n  tableObject: any;\n  sort_direction: string[] = [];\n  current_sorting: boolean[] = [];\n  constructor() {\n    this.tableObject = null;\n  }\n\n  ngOnInit() {\n    if (this.analyticsObject && this.tableConfiguration) {\n      this.tableObject = drawTable(\n        this.analyticsObject,\n        this.tableConfiguration\n      );\n    }\n  }\n\n  sortData(tableObject, n, isLastItem) {\n    if (tableObject.columns.length === 1 && isLastItem) {\n      this.current_sorting = [];\n      this.current_sorting[n] = true;\n      let table,\n        rows,\n        switching,\n        i,\n        x,\n        y,\n        shouldSwitch,\n        dir,\n        switchcount = 0;\n      table = document.getElementById('myPivotTable');\n      switching = true;\n      //  Set the sorting direction to ascending:\n      dir = 'asc';\n      /*Make a loop that will continue until\n       no switching has been done:*/\n      while (switching) {\n        //  start by saying: no switching is done:\n        switching = false;\n        rows = table.getElementsByTagName('TR');\n        /*Loop through all table rows (except the\n         first, which contains table headers):*/\n        for (i = 0; i < rows.length - 1; i++) {\n          // start by saying there should be no switching:\n          shouldSwitch = false;\n          /*Get the two elements you want to compare,\n           one from current row and one from the next:*/\n          x = rows[i].getElementsByTagName('TD')[n];\n          y = rows[i + 1].getElementsByTagName('TD')[n];\n          /*check if the two rows should switch place,\n           based on the direction, asc or desc:*/\n          if (dir === 'asc') {\n            if (parseFloat(x.innerHTML)) {\n              if (parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) {\n                // if so, mark as a switch and break the loop:\n                shouldSwitch = true;\n                break;\n              }\n            } else {\n              if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n                // if so, mark as a switch and break the loop:\n                shouldSwitch = true;\n                break;\n              }\n            }\n            this.sort_direction[n] = 'asc';\n          } else if (dir === 'desc') {\n            if (parseFloat(x.innerHTML)) {\n              if (parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) {\n                // if so, mark as a switch and break the loop:\n                shouldSwitch = true;\n                break;\n              }\n            } else {\n              if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n                // if so, mark as a switch and break the loop:\n                shouldSwitch = true;\n                break;\n              }\n            }\n            this.sort_direction[n] = 'desc';\n          }\n        }\n        if (shouldSwitch) {\n          /*If a switch has been marked, make the switch\n           and mark that a switch has been done:*/\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n          switching = true;\n          // Each time a switch is done, increase this count by 1:\n          switchcount++;\n        } else {\n          /*If no switching has been done AND the direction is 'asc',\n           set the direction to 'desc' and run the while loop again.*/\n          if (switchcount === 0 && dir === 'asc') {\n            dir = 'desc';\n            this.sort_direction[n] = 'desc';\n            switching = true;\n          }\n        }\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TableListComponent } from './components/table-list/table-list.component';\nimport { TableItemComponent } from './components/table-item/table-item.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TableListComponent, TableItemComponent],\n  exports: [TableListComponent, TableItemComponent]\n})\nexport class NgxDhis2TableModule {}\n"]}