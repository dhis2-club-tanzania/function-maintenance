{"version":3,"file":"hisptz-ngx-dhis2-table.js.map","sources":["ng://@hisptz/ngx-dhis2-table/lib/helpers/get-table-configuration.helper.ts","ng://@hisptz/ngx-dhis2-table/lib/helpers/draw-table.helper.ts","ng://@hisptz/ngx-dhis2-table/lib/components/table-list/table-list.component.ts","ng://@hisptz/ngx-dhis2-table/lib/components/table-item/table-item.component.ts","ng://@hisptz/ngx-dhis2-table/lib/ngx-dhis2-table.module.ts"],"sourcesContent":["import { TableConfiguration } from '../models/table-configuration';\nexport function getTableConfiguration(\n  favoriteObject: any,\n  visualizationLayout: any,\n  type: string\n): TableConfiguration {\n  return {\n    title: favoriteObject.hasOwnProperty('displayName')\n      ? favoriteObject.displayName\n      : favoriteObject.hasOwnProperty('name')\n        ? favoriteObject.name\n        : '',\n    subtitle: favoriteObject.hasOwnProperty('subtitle')\n      ? favoriteObject.subtitle\n      : '',\n    showColumnTotal: favoriteObject.hasOwnProperty('colTotal')\n      ? favoriteObject.colTotal\n      : true,\n    showColumnSubtotal: favoriteObject.hasOwnProperty('colSubtotal')\n      ? favoriteObject.colSubtotal\n      : true,\n    showRowTotal: favoriteObject.hasOwnProperty('rowTotal')\n      ? favoriteObject.rowTotal\n      : true,\n    showRowSubtotal: favoriteObject.hasOwnProperty('rowSubtotal')\n      ? favoriteObject.rowSubtotal\n      : true,\n    showDimensionLabels: favoriteObject.hasOwnProperty('showDimensionLabels')\n      ? favoriteObject.showDimensionLabels\n      : true,\n    hideEmptyRows: favoriteObject.hasOwnProperty('hideEmptyRows')\n      ? favoriteObject.hideEmptyRows\n      : true,\n    showHierarchy: favoriteObject.hasOwnProperty('showHierarchy')\n      ? favoriteObject.showHierarchy\n      : true,\n    displayList: checkForEventDataType(favoriteObject, type),\n    rows: visualizationLayout.rows ? visualizationLayout.rows : ['pe'],\n    columns: visualizationLayout.columns ? visualizationLayout.columns : ['dx'],\n    legendSet: favoriteObject.legendSet || null,\n    styles: null\n  };\n}\n\nfunction checkForEventDataType(favoriteObject, favoriteType): boolean {\n  let displayList = false;\n  if (favoriteType === 'EVENT_REPORT') {\n    if (\n      favoriteObject.hasOwnProperty('dataType') &&\n      favoriteObject.dataType === 'EVENTS'\n    ) {\n      displayList = true;\n    }\n  }\n  return displayList;\n}\n","import { TableConfiguration } from '../models/table-configuration';\nexport function drawTable(\n  analyticsObject,\n  tableConfiguration: TableConfiguration\n) {\n  const legendClasses = tableConfiguration.legendSet\n    ? tableConfiguration.legendSet.legends\n    : null;\n\n  const table = {\n    headers: [],\n    columns: [],\n    rows: [],\n    titles: {\n      rows: [],\n      column: []\n    },\n    titlesAvailable: false,\n    hasParentOu: false\n  };\n  if (tableConfiguration.hasOwnProperty('title')) {\n    table['title'] = tableConfiguration.title;\n  }\n  if (tableConfiguration.hasOwnProperty('subtitle')) {\n    table['subtitle'] = tableConfiguration.subtitle;\n  }\n  if (tableConfiguration.displayList) {\n    table.headers[0] = {\n      items: [],\n      style: ''\n    };\n    tableConfiguration.columns[tableConfiguration.columns.indexOf('pe')] =\n      'eventdate';\n    tableConfiguration.columns[tableConfiguration.columns.indexOf('ou')] =\n      'ouname';\n    for (const item of tableConfiguration.columns) {\n      table.headers[0].items.push({\n        name:\n          analyticsObject.headers[getTitleIndex(analyticsObject.headers, item)]\n            .column,\n        span: 1\n      });\n    }\n    for (const item of analyticsObject.rows) {\n      const column_items = [];\n      for (const col of tableConfiguration.columns) {\n        const index = getTitleIndex(analyticsObject.headers, col);\n        column_items.push({\n          name: '',\n          display: true,\n          row_span: '1',\n          // color:getColor(item[index],)\n          val: item[index]\n        });\n      }\n      table.rows.push({\n        headers: [],\n        items: column_items\n      });\n    }\n  } else {\n    // add names to titles array\n    if (tableConfiguration.showDimensionLabels) {\n      table.titlesAvailable = true;\n      for (const item of tableConfiguration.columns) {\n        table.titles.column.push(\n          analyticsObject.headers[getTitleIndex(analyticsObject.headers, item)]\n            .column\n        );\n      }\n      for (const item of tableConfiguration.rows) {\n        table.titles.rows.push(\n          analyticsObject.headers[getTitleIndex(analyticsObject.headers, item)]\n            .column\n        );\n      }\n    }\n    for (const columnItem of tableConfiguration.columns) {\n      const dimension = calculateColSpan(\n        analyticsObject,\n        tableConfiguration.columns,\n        columnItem\n      );\n      const currentColumnItems = prepareSingleCategories(\n        analyticsObject,\n        columnItem\n      );\n      const headerItem = [];\n      for (let i = 0; i < dimension.duplication; i++) {\n        for (const currentItem of currentColumnItems) {\n          headerItem.push({\n            name: currentItem.name,\n            span: dimension.col_span,\n            type: currentItem.type,\n            id: currentItem.uid\n          });\n        }\n      }\n      let styles = '';\n      if (tableConfiguration.hasOwnProperty('style')) {\n        if (tableConfiguration.styles.hasOwnProperty(columnItem)) {\n          styles = tableConfiguration.styles[columnItem];\n        }\n      }\n      table.headers.push({ items: headerItem, style: styles });\n    }\n    for (const rowItem of tableConfiguration.rows) {\n      table.columns.push(rowItem);\n    }\n\n    // Preparing table columns\n    const column_length = tableConfiguration.columns.length;\n    const column_items_array = [];\n    for (let i = 0; i < column_length; i++) {\n      const currentRowItems = prepareSingleCategories(\n        analyticsObject,\n        tableConfiguration.columns[i]\n      );\n      column_items_array.push(currentRowItems);\n    }\n    let table_columns_array = [];\n    for (let i = 0; i < column_items_array.length; i++) {\n      if (table_columns_array.length === 0) {\n        for (const item of column_items_array[i]) {\n          table_columns_array.push([item]);\n        }\n      } else {\n        const temp_arr = table_columns_array.concat();\n        table_columns_array = [];\n        for (const item of temp_arr) {\n          for (const val of column_items_array[i]) {\n            if (item instanceof Array) {\n              const tempArr = Array.from(item);\n              table_columns_array.push(tempArr.concat([val]));\n            } else {\n              table_columns_array.push([item, val]);\n            }\n          }\n        }\n      }\n    }\n\n    // Preparing table rows\n    const rows_length = tableConfiguration.rows.length;\n    const row_items_array = [];\n    for (let i = 0; i < rows_length; i++) {\n      const dimension = calculateColSpan(\n        analyticsObject,\n        tableConfiguration.rows,\n        tableConfiguration.rows[i]\n      );\n      const currentRowItems = prepareSingleCategories(\n        analyticsObject,\n        tableConfiguration.rows[i]\n      );\n      row_items_array.push({ items: currentRowItems, dimensions: dimension });\n    }\n    let table_rows_array = [];\n    for (let i = 0; i < row_items_array.length; i++) {\n      if (table_rows_array.length === 0) {\n        for (const item of row_items_array[i].items) {\n          item.dimensions = row_items_array[i].dimensions;\n          table_rows_array.push([item]);\n        }\n      } else {\n        const temp_arr = table_rows_array.concat();\n        table_rows_array = [];\n        for (const item of temp_arr) {\n          for (const val of row_items_array[i].items) {\n            val.dimensions = row_items_array[i].dimensions;\n            if (item instanceof Array) {\n              const tempArr = Array.from(item);\n              table_rows_array.push(tempArr.concat([val]));\n            } else {\n              table_rows_array.push([item, val]);\n            }\n          }\n        }\n      }\n    }\n\n    let counter = 0;\n    if (table_rows_array.length !== 0) {\n      for (const rowItem of table_rows_array) {\n        const item = {\n          items: [],\n          headers: rowItem\n        };\n        for (const val of rowItem) {\n          if (counter === 0 || counter % val.dimensions.col_span === 0) {\n            item.items.push({\n              type: val.type,\n              name: val.uid,\n              val: val.name,\n              row_span: val.dimensions.col_span,\n              header: true\n            });\n          }\n        }\n        for (const colItem of table_columns_array) {\n          const dataItem = [];\n          for (const val of rowItem) {\n            dataItem.push({ type: val.type, value: val.uid });\n          }\n          for (const val of colItem) {\n            dataItem.push({ type: val.type, value: val.uid });\n          }\n          item.items.push({\n            name: '',\n            val: getDataValue(analyticsObject, dataItem),\n            color: getDataValueColor(\n              legendClasses,\n              getDataValue(analyticsObject, dataItem)\n            ),\n            row_span: '1',\n            display: true\n          });\n        }\n        if (\n          tableConfiguration.hasOwnProperty('hideEmptyRows') &&\n          tableConfiguration.hideEmptyRows\n        ) {\n          if (!checkZeros(tableConfiguration.rows.length, item.items)) {\n            table.rows.push(item);\n          }\n        } else {\n          table.rows.push(item);\n        }\n\n        counter++;\n      }\n    } else {\n      const item = {\n        items: [],\n        headers: []\n      };\n      for (const colItem of table_columns_array) {\n        const dataItem = [];\n        for (const val of colItem) {\n          dataItem.push({ type: val.type, value: val.uid });\n        }\n        item.items.push({\n          name: '',\n          val: getDataValue(analyticsObject, dataItem),\n          row_span: '1',\n          display: true\n        });\n      }\n      if (\n        tableConfiguration.hasOwnProperty('hideEmptyRows') &&\n        tableConfiguration.hideEmptyRows\n      ) {\n        if (!checkZeros(tableConfiguration.rows.length, item.items)) {\n          table.rows.push(item);\n        }\n      } else {\n        table.rows.push(item);\n      }\n    }\n  }\n\n  // todo improve total options to also work for event table\n  // return _getSanitizedTableObject(table, tableConfiguration);\n  return table;\n}\n\nfunction getTitleIndex(analyticsObjectHeaders, name: string) {\n  let index = 0;\n  let counter = 0;\n  for (const header of analyticsObjectHeaders) {\n    if (header.name === name) {\n      index = counter;\n    }\n    counter++;\n  }\n  return index;\n}\n\nfunction calculateColSpan(analyticsObject, array, item) {\n  const indexOfItem = array.indexOf(item);\n  const array_length = array.length;\n  const last_index = array_length - 1;\n  const dimensions = { col_span: 1, duplication: 1 };\n  for (let i = last_index; i > indexOfItem; i--) {\n    const arr = prepareSingleCategories(analyticsObject, array[i]);\n    dimensions.col_span = dimensions.col_span * arr.length;\n  }\n  for (let i = 0; i < indexOfItem; i++) {\n    const arr = prepareSingleCategories(analyticsObject, array[i]);\n    dimensions.duplication = dimensions.duplication * arr.length;\n  }\n  return dimensions;\n}\n\nfunction prepareSingleCategories(\n  initialAnalytics,\n  itemIdentifier,\n  preDefinedItems = []\n) {\n  const analyticsObject = sanitizeIncomingAnalytics(initialAnalytics);\n  const structure = [];\n  if (preDefinedItems.length === 0) {\n    for (const val of getMetadataArray(analyticsObject, itemIdentifier)) {\n      structure.push({\n        name: analyticsObject.metaData.names[val],\n        uid: val,\n        type: itemIdentifier\n      });\n    }\n  }\n  if (preDefinedItems.length !== 0) {\n    for (const val of preDefinedItems) {\n      structure.push({\n        name: analyticsObject.metaData.names[val],\n        uid: val,\n        type: itemIdentifier\n      });\n    }\n  }\n  return structure;\n}\n\nfunction sanitizeIncomingAnalytics(analyticsObject: any) {\n  return analyticsObject;\n}\n\nfunction getMetadataArray(analyticsObject, metadataType: string) {\n  let metadataArray = [];\n  if (metadataType === 'dx') {\n    metadataArray = analyticsObject.metaData.dx;\n  } else if (metadataType === 'ou') {\n    metadataArray = analyticsObject.metaData.ou;\n  } else if (metadataType === 'co') {\n    metadataArray = analyticsObject.metaData.co;\n  } else if (metadataType === 'pe') {\n    metadataArray = analyticsObject.metaData.pe;\n  } else {\n    metadataArray = analyticsObject.metaData[metadataType];\n  }\n  return metadataArray;\n}\n\nfunction getDataValue(analyticsObject, dataItems = []) {\n  let num = null;\n  for (const value of analyticsObject.rows) {\n    let counter = 0;\n    for (const item of dataItems) {\n      if (\n        value[getTitleIndex(analyticsObject.headers, item.type)] === item.value\n      ) {\n        counter++;\n      }\n    }\n    if (counter === dataItems.length) {\n      if (isNaN(value[getTitleIndex(analyticsObject.headers, 'value')])) {\n        num = value[getTitleIndex(analyticsObject.headers, 'value')];\n      } else {\n        num += parseFloat(\n          value[getTitleIndex(analyticsObject.headers, 'value')]\n        );\n      }\n    }\n  }\n  return num;\n}\n\nfunction getDataValueColor(legendClasses, value) {\n  let color = '';\n  if (!isNaN(value) && legendClasses) {\n    legendClasses.forEach(legendClass => {\n      if (legendClass.startValue <= value && legendClass.endValue > value) {\n        color = legendClass.color;\n      }\n\n      // if (legendClass.startValue < value && legendClass.endValue >= value) {\n      \n      // }\n    });\n  }\n  return color;\n}\n\nfunction checkZeros(stating_length, array): boolean {\n  let checker = true;\n  for (let i = stating_length; i < array.length; i++) {\n    if (array[i].name === '' && array[i].val != null) {\n      checker = false;\n    }\n  }\n  return checker;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TableConfiguration } from '../../models/table-configuration';\n\nimport { getTableConfiguration } from '../../helpers/index';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-dhis2-table-list',\n  template: `<div class=\"row\">\n    <div class=\"col-12\" *ngFor=\"let tableLayer of tableLayers\">\n        <ngx-dhis2-table-item [analyticsObject]=\"tableLayer.analyticsObject\" [tableConfiguration]=\"tableLayer.tableConfiguration\">\n        </ngx-dhis2-table-item>\n    </div>\n</div>`,\n  styles: [``]\n})\nexport class TableListComponent implements OnInit {\n  @Input() visualizationLayers: any[];\n  @Input() visualizationType: string;\n  tableLayers: Array<{\n    tableConfiguration: TableConfiguration;\n    analyticsObject: any;\n  }> = [];\n  constructor() {}\n\n  ngOnInit() {\n    if (this.visualizationLayers && this.visualizationLayers.length > 0) {\n      this.tableLayers = this.visualizationLayers.map((layer: any) => {\n        return {\n          tableConfiguration: getTableConfiguration(\n            layer.config || {},\n            layer.layout,\n            this.visualizationType\n          ),\n          analyticsObject: layer.analytics\n        };\n      });\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TableConfiguration } from '../../models/table-configuration';\n\nimport { drawTable } from '../../helpers/index';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-dhis2-table-item',\n  template: `<div class=\"row\">\n    <div class=\"col-md-12\" *ngIf=\"tableObject\">\n        <h5 style=\"margin-top: 80px\" class=\"text-center\" *ngIf=\"tableObject.rows.length == 0\"> No data to display</h5>\n\n        <div *ngIf=\"tableObject\" style=\"padding: 3px\">\n            <!--<h4 *ngIf=\"tableObject.rows.length != 0\" class=\"text-center\" style=\"margin-bottom: 0px\">{{tableObject?.title}}</h4>-->\n            <table class=\"table table-bordered table-responsive table-condensed custom-table\" *ngIf=\"tableObject.rows.length != 0\">\n                <thead>\n                    <!--title-->\n                    <tr class=\"table-title\">\n                        <th [attr.colspan]=\"tableObject.rows[0].items.length\">\n                            <h4 style=\"margin: 0px\" class=\"text-center\">{{tableObject.subtitle}} </h4>\n                        </th>\n                    </tr>\n                    <!--headers-->\n                    <tr *ngFor=\"let header of tableObject.headers; let j = index\" class=\"header-column\">\n                        <th *ngIf=\"tableObject.hasParentOu\"></th>\n                        <th *ngFor=\"let table_column of tableObject.columns; let i = index\" style=\"text-align: center\">\n                            <span *ngIf=\"i==tableObject.columns.length-1 && j==tableObject.headers.length-1 && tableObject.titlesAvailable\">{{ tableObject.titles.rows[i] }} / {{ tableObject.titles.column[j]}}</span>\n                            <span *ngIf=\"i != tableObject.columns.length-1\">{{ tableObject.titles.rows[i] }}</span>\n                            <span *ngIf=\"j != tableObject.headers.length-1\">{{ tableObject.titles.column[j] }}</span>\n                        </th>\n                        <th *ngFor=\"let header_column of header.items; let i=index\" [colSpan]=\"header_column.span\" style=\"text-align: center\" (click)=\"sortData(tableObject,i+tableObject.columns.length,j+1==tableObject.headers.length)\">\n                            {{ header_column.name }}\n                            <span *ngIf=\"j+1==tableObject.headers.length && current_sorting[i+tableObject.columns.length] && sort_direction[i+tableObject.columns.length] == 'asc'\" class=\"glyphicon glyphicon-triangle-top pull-right\"></span>\n                            <span *ngIf=\"j+1==tableObject.headers.length && current_sorting[i+tableObject.columns.length] && sort_direction[i+tableObject.columns.length] == 'desc'\" class=\"glyphicon glyphicon-triangle-bottom pull-right\"></span>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody id=\"myPivotTable\">\n                    <tr *ngFor=\"let row of tableObject.rows\" [ngClass]=\"{'sub-total': row.sub_total}\">\n                        <td *ngFor=\"let header_column of row.items;let i = index\" [ngClass]=\"{'header-column': header_column.name != ''}\" style=\"text-align: center;vertical-align: middle\" [attr.rowspan]=\"header_column.row_span\" [style.background]=\"header_column.color\">\n                            {{ header_column.val }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n\n        </div>\n    </div>\n</div>`,\n  styles: [`.table-item-container{overflow:hidden}.custom-table{display:table;border-style:none!important;width:100%}.custom-table td,.custom-table th{border:thin solid #f1f1f1}.custom-table>tbody>tr>td,.custom-table>thead>tr>th{font-size:13px!important}table tr th{background-color:rgba(238,238,238,.29);padding:4px;text-align:center}table tr td{padding:4px}table tr td:first-child{background-color:rgba(238,238,238,.29)}.table-title{font-size:13px;font-weight:600;text-align:center}`]\n})\nexport class TableItemComponent implements OnInit {\n  @Input() tableConfiguration: TableConfiguration;\n  @Input() analyticsObject: any;\n  tableObject: any;\n  sort_direction: string[] = [];\n  current_sorting: boolean[] = [];\n  constructor() {\n    this.tableObject = null;\n  }\n\n  ngOnInit() {\n    if (this.analyticsObject && this.tableConfiguration) {\n      this.tableObject = drawTable(\n        this.analyticsObject,\n        this.tableConfiguration\n      );\n    }\n  }\n\n  sortData(tableObject, n, isLastItem) {\n    if (tableObject.columns.length === 1 && isLastItem) {\n      this.current_sorting = [];\n      this.current_sorting[n] = true;\n      let table,\n        rows,\n        switching,\n        i,\n        x,\n        y,\n        shouldSwitch,\n        dir,\n        switchcount = 0;\n      table = document.getElementById('myPivotTable');\n      switching = true;\n      //  Set the sorting direction to ascending:\n      dir = 'asc';\n      /*Make a loop that will continue until\n       no switching has been done:*/\n      while (switching) {\n        //  start by saying: no switching is done:\n        switching = false;\n        rows = table.getElementsByTagName('TR');\n        /*Loop through all table rows (except the\n         first, which contains table headers):*/\n        for (i = 0; i < rows.length - 1; i++) {\n          // start by saying there should be no switching:\n          shouldSwitch = false;\n          /*Get the two elements you want to compare,\n           one from current row and one from the next:*/\n          x = rows[i].getElementsByTagName('TD')[n];\n          y = rows[i + 1].getElementsByTagName('TD')[n];\n          /*check if the two rows should switch place,\n           based on the direction, asc or desc:*/\n          if (dir === 'asc') {\n            if (parseFloat(x.innerHTML)) {\n              if (parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) {\n                // if so, mark as a switch and break the loop:\n                shouldSwitch = true;\n                break;\n              }\n            } else {\n              if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n                // if so, mark as a switch and break the loop:\n                shouldSwitch = true;\n                break;\n              }\n            }\n            this.sort_direction[n] = 'asc';\n          } else if (dir === 'desc') {\n            if (parseFloat(x.innerHTML)) {\n              if (parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) {\n                // if so, mark as a switch and break the loop:\n                shouldSwitch = true;\n                break;\n              }\n            } else {\n              if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n                // if so, mark as a switch and break the loop:\n                shouldSwitch = true;\n                break;\n              }\n            }\n            this.sort_direction[n] = 'desc';\n          }\n        }\n        if (shouldSwitch) {\n          /*If a switch has been marked, make the switch\n           and mark that a switch has been done:*/\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n          switching = true;\n          // Each time a switch is done, increase this count by 1:\n          switchcount++;\n        } else {\n          /*If no switching has been done AND the direction is 'asc',\n           set the direction to 'desc' and run the while loop again.*/\n          if (switchcount === 0 && dir === 'asc') {\n            dir = 'desc';\n            this.sort_direction[n] = 'desc';\n            switching = true;\n          }\n        }\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TableListComponent } from './components/table-list/table-list.component';\nimport { TableItemComponent } from './components/table-item/table-item.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TableListComponent, TableItemComponent],\n  exports: [TableListComponent, TableItemComponent]\n})\nexport class NgxDhis2TableModule {}\n"],"names":["tslib_1.__values"],"mappings":"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"}
