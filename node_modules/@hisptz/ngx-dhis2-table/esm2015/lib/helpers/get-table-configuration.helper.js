/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @param {?} favoriteObject
 * @param {?} visualizationLayout
 * @param {?} type
 * @return {?}
 */
export function getTableConfiguration(favoriteObject, visualizationLayout, type) {
    return {
        title: favoriteObject.hasOwnProperty('displayName')
            ? favoriteObject.displayName
            : favoriteObject.hasOwnProperty('name')
                ? favoriteObject.name
                : '',
        subtitle: favoriteObject.hasOwnProperty('subtitle')
            ? favoriteObject.subtitle
            : '',
        showColumnTotal: favoriteObject.hasOwnProperty('colTotal')
            ? favoriteObject.colTotal
            : true,
        showColumnSubtotal: favoriteObject.hasOwnProperty('colSubtotal')
            ? favoriteObject.colSubtotal
            : true,
        showRowTotal: favoriteObject.hasOwnProperty('rowTotal')
            ? favoriteObject.rowTotal
            : true,
        showRowSubtotal: favoriteObject.hasOwnProperty('rowSubtotal')
            ? favoriteObject.rowSubtotal
            : true,
        showDimensionLabels: favoriteObject.hasOwnProperty('showDimensionLabels')
            ? favoriteObject.showDimensionLabels
            : true,
        hideEmptyRows: favoriteObject.hasOwnProperty('hideEmptyRows')
            ? favoriteObject.hideEmptyRows
            : true,
        showHierarchy: favoriteObject.hasOwnProperty('showHierarchy')
            ? favoriteObject.showHierarchy
            : true,
        displayList: checkForEventDataType(favoriteObject, type),
        rows: visualizationLayout.rows ? visualizationLayout.rows : ['pe'],
        columns: visualizationLayout.columns ? visualizationLayout.columns : ['dx'],
        legendSet: favoriteObject.legendSet || null,
        styles: null
    };
}
/**
 * @param {?} favoriteObject
 * @param {?} favoriteType
 * @return {?}
 */
function checkForEventDataType(favoriteObject, favoriteType) {
    let /** @type {?} */ displayList = false;
    if (favoriteType === 'EVENT_REPORT') {
        if (favoriteObject.hasOwnProperty('dataType') &&
            favoriteObject.dataType === 'EVENTS') {
            displayList = true;
        }
    }
    return displayList;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXRhYmxlLWNvbmZpZ3VyYXRpb24uaGVscGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGhpc3B0ei9uZ3gtZGhpczItdGFibGUvIiwic291cmNlcyI6WyJsaWIvaGVscGVycy9nZXQtdGFibGUtY29uZmlndXJhdGlvbi5oZWxwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE1BQU0sZ0NBQ0osY0FBbUIsRUFDbkIsbUJBQXdCLEVBQ3hCLElBQVk7SUFFWixNQUFNLENBQUM7UUFDTCxLQUFLLEVBQUUsY0FBYyxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUM7WUFDakQsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxXQUFXO1lBQzVCLENBQUMsQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQztnQkFDckMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxJQUFJO2dCQUNyQixDQUFDLENBQUMsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQztZQUNqRCxDQUFDLENBQUMsY0FBYyxDQUFDLFFBQVE7WUFDekIsQ0FBQyxDQUFDLEVBQUU7UUFDTixlQUFlLEVBQUUsY0FBYyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUM7WUFDeEQsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxRQUFRO1lBQ3pCLENBQUMsQ0FBQyxJQUFJO1FBQ1Isa0JBQWtCLEVBQUUsY0FBYyxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUM7WUFDOUQsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxXQUFXO1lBQzVCLENBQUMsQ0FBQyxJQUFJO1FBQ1IsWUFBWSxFQUFFLGNBQWMsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDO1lBQ3JELENBQUMsQ0FBQyxjQUFjLENBQUMsUUFBUTtZQUN6QixDQUFDLENBQUMsSUFBSTtRQUNSLGVBQWUsRUFBRSxjQUFjLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQztZQUMzRCxDQUFDLENBQUMsY0FBYyxDQUFDLFdBQVc7WUFDNUIsQ0FBQyxDQUFDLElBQUk7UUFDUixtQkFBbUIsRUFBRSxjQUFjLENBQUMsY0FBYyxDQUFDLHFCQUFxQixDQUFDO1lBQ3ZFLENBQUMsQ0FBQyxjQUFjLENBQUMsbUJBQW1CO1lBQ3BDLENBQUMsQ0FBQyxJQUFJO1FBQ1IsYUFBYSxFQUFFLGNBQWMsQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDO1lBQzNELENBQUMsQ0FBQyxjQUFjLENBQUMsYUFBYTtZQUM5QixDQUFDLENBQUMsSUFBSTtRQUNSLGFBQWEsRUFBRSxjQUFjLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQztZQUMzRCxDQUFDLENBQUMsY0FBYyxDQUFDLGFBQWE7WUFDOUIsQ0FBQyxDQUFDLElBQUk7UUFDUixXQUFXLEVBQUUscUJBQXFCLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQztRQUN4RCxJQUFJLEVBQUUsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2xFLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDM0UsU0FBUyxFQUFFLGNBQWMsQ0FBQyxTQUFTLElBQUksSUFBSTtRQUMzQyxNQUFNLEVBQUUsSUFBSTtLQUNiLENBQUM7Q0FDSDs7Ozs7O0FBRUQsK0JBQStCLGNBQWMsRUFBRSxZQUFZO0lBQ3pELHFCQUFJLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDeEIsRUFBRSxDQUFDLENBQUMsWUFBWSxLQUFLLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFDcEMsRUFBRSxDQUFDLENBQ0QsY0FBYyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUM7WUFDekMsY0FBYyxDQUFDLFFBQVEsS0FBSyxRQUM5QixDQUFDLENBQUMsQ0FBQztZQUNELFdBQVcsR0FBRyxJQUFJLENBQUM7U0FDcEI7S0FDRjtJQUNELE1BQU0sQ0FBQyxXQUFXLENBQUM7Q0FDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWJsZUNvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi9tb2RlbHMvdGFibGUtY29uZmlndXJhdGlvbic7XG5leHBvcnQgZnVuY3Rpb24gZ2V0VGFibGVDb25maWd1cmF0aW9uKFxuICBmYXZvcml0ZU9iamVjdDogYW55LFxuICB2aXN1YWxpemF0aW9uTGF5b3V0OiBhbnksXG4gIHR5cGU6IHN0cmluZ1xuKTogVGFibGVDb25maWd1cmF0aW9uIHtcbiAgcmV0dXJuIHtcbiAgICB0aXRsZTogZmF2b3JpdGVPYmplY3QuaGFzT3duUHJvcGVydHkoJ2Rpc3BsYXlOYW1lJylcbiAgICAgID8gZmF2b3JpdGVPYmplY3QuZGlzcGxheU5hbWVcbiAgICAgIDogZmF2b3JpdGVPYmplY3QuaGFzT3duUHJvcGVydHkoJ25hbWUnKVxuICAgICAgICA/IGZhdm9yaXRlT2JqZWN0Lm5hbWVcbiAgICAgICAgOiAnJyxcbiAgICBzdWJ0aXRsZTogZmF2b3JpdGVPYmplY3QuaGFzT3duUHJvcGVydHkoJ3N1YnRpdGxlJylcbiAgICAgID8gZmF2b3JpdGVPYmplY3Quc3VidGl0bGVcbiAgICAgIDogJycsXG4gICAgc2hvd0NvbHVtblRvdGFsOiBmYXZvcml0ZU9iamVjdC5oYXNPd25Qcm9wZXJ0eSgnY29sVG90YWwnKVxuICAgICAgPyBmYXZvcml0ZU9iamVjdC5jb2xUb3RhbFxuICAgICAgOiB0cnVlLFxuICAgIHNob3dDb2x1bW5TdWJ0b3RhbDogZmF2b3JpdGVPYmplY3QuaGFzT3duUHJvcGVydHkoJ2NvbFN1YnRvdGFsJylcbiAgICAgID8gZmF2b3JpdGVPYmplY3QuY29sU3VidG90YWxcbiAgICAgIDogdHJ1ZSxcbiAgICBzaG93Um93VG90YWw6IGZhdm9yaXRlT2JqZWN0Lmhhc093blByb3BlcnR5KCdyb3dUb3RhbCcpXG4gICAgICA/IGZhdm9yaXRlT2JqZWN0LnJvd1RvdGFsXG4gICAgICA6IHRydWUsXG4gICAgc2hvd1Jvd1N1YnRvdGFsOiBmYXZvcml0ZU9iamVjdC5oYXNPd25Qcm9wZXJ0eSgncm93U3VidG90YWwnKVxuICAgICAgPyBmYXZvcml0ZU9iamVjdC5yb3dTdWJ0b3RhbFxuICAgICAgOiB0cnVlLFxuICAgIHNob3dEaW1lbnNpb25MYWJlbHM6IGZhdm9yaXRlT2JqZWN0Lmhhc093blByb3BlcnR5KCdzaG93RGltZW5zaW9uTGFiZWxzJylcbiAgICAgID8gZmF2b3JpdGVPYmplY3Quc2hvd0RpbWVuc2lvbkxhYmVsc1xuICAgICAgOiB0cnVlLFxuICAgIGhpZGVFbXB0eVJvd3M6IGZhdm9yaXRlT2JqZWN0Lmhhc093blByb3BlcnR5KCdoaWRlRW1wdHlSb3dzJylcbiAgICAgID8gZmF2b3JpdGVPYmplY3QuaGlkZUVtcHR5Um93c1xuICAgICAgOiB0cnVlLFxuICAgIHNob3dIaWVyYXJjaHk6IGZhdm9yaXRlT2JqZWN0Lmhhc093blByb3BlcnR5KCdzaG93SGllcmFyY2h5JylcbiAgICAgID8gZmF2b3JpdGVPYmplY3Quc2hvd0hpZXJhcmNoeVxuICAgICAgOiB0cnVlLFxuICAgIGRpc3BsYXlMaXN0OiBjaGVja0ZvckV2ZW50RGF0YVR5cGUoZmF2b3JpdGVPYmplY3QsIHR5cGUpLFxuICAgIHJvd3M6IHZpc3VhbGl6YXRpb25MYXlvdXQucm93cyA/IHZpc3VhbGl6YXRpb25MYXlvdXQucm93cyA6IFsncGUnXSxcbiAgICBjb2x1bW5zOiB2aXN1YWxpemF0aW9uTGF5b3V0LmNvbHVtbnMgPyB2aXN1YWxpemF0aW9uTGF5b3V0LmNvbHVtbnMgOiBbJ2R4J10sXG4gICAgbGVnZW5kU2V0OiBmYXZvcml0ZU9iamVjdC5sZWdlbmRTZXQgfHwgbnVsbCxcbiAgICBzdHlsZXM6IG51bGxcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2hlY2tGb3JFdmVudERhdGFUeXBlKGZhdm9yaXRlT2JqZWN0LCBmYXZvcml0ZVR5cGUpOiBib29sZWFuIHtcbiAgbGV0IGRpc3BsYXlMaXN0ID0gZmFsc2U7XG4gIGlmIChmYXZvcml0ZVR5cGUgPT09ICdFVkVOVF9SRVBPUlQnKSB7XG4gICAgaWYgKFxuICAgICAgZmF2b3JpdGVPYmplY3QuaGFzT3duUHJvcGVydHkoJ2RhdGFUeXBlJykgJiZcbiAgICAgIGZhdm9yaXRlT2JqZWN0LmRhdGFUeXBlID09PSAnRVZFTlRTJ1xuICAgICkge1xuICAgICAgZGlzcGxheUxpc3QgPSB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZGlzcGxheUxpc3Q7XG59XG4iXX0=