/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { getTableConfiguration } from '../../helpers/index';
export class TableListComponent {
    constructor() {
        this.tableLayers = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.visualizationLayers && this.visualizationLayers.length > 0) {
            this.tableLayers = this.visualizationLayers.map((layer) => {
                return {
                    tableConfiguration: getTableConfiguration(layer.config || {}, layer.layout, this.visualizationType),
                    analyticsObject: layer.analytics
                };
            });
        }
    }
}
TableListComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'ngx-dhis2-table-list',
                template: `<div class="row">
    <div class="col-12" *ngFor="let tableLayer of tableLayers">
        <ngx-dhis2-table-item [analyticsObject]="tableLayer.analyticsObject" [tableConfiguration]="tableLayer.tableConfiguration">
        </ngx-dhis2-table-item>
    </div>
</div>`,
                styles: [``]
            },] },
];
/** @nocollapse */
TableListComponent.ctorParameters = () => [];
TableListComponent.propDecorators = {
    visualizationLayers: [{ type: Input }],
    visualizationType: [{ type: Input }]
};
function TableListComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    TableListComponent.prototype.visualizationLayers;
    /** @type {?} */
    TableListComponent.prototype.visualizationType;
    /** @type {?} */
    TableListComponent.prototype.tableLayers;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaGlzcHR6L25neC1kaGlzMi10YWJsZS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhYmxlLWxpc3QvdGFibGUtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBR3pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBWTVELE1BQU07SUFPSjsyQkFESyxFQUFFO0tBQ1M7Ozs7SUFFaEIsUUFBUTtRQUNOLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsSUFBSSxJQUFJLENBQUMsbUJBQW1CLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEUsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBVSxFQUFFLEVBQUU7Z0JBQzdELE1BQU0sQ0FBQztvQkFDTCxrQkFBa0IsRUFBRSxxQkFBcUIsQ0FDdkMsS0FBSyxDQUFDLE1BQU0sSUFBSSxFQUFFLEVBQ2xCLEtBQUssQ0FBQyxNQUFNLEVBQ1osSUFBSSxDQUFDLGlCQUFpQixDQUN2QjtvQkFDRCxlQUFlLEVBQUUsS0FBSyxDQUFDLFNBQVM7aUJBQ2pDLENBQUM7YUFDSCxDQUFDLENBQUM7U0FDSjtLQUNGOzs7WUFqQ0YsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxRQUFRLEVBQUU7Ozs7O09BS0w7Z0JBQ0wsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2I7Ozs7O2tDQUVFLEtBQUs7Z0NBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGFibGVDb25maWd1cmF0aW9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RhYmxlLWNvbmZpZ3VyYXRpb24nO1xuXG5pbXBvcnQgeyBnZXRUYWJsZUNvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi8uLi9oZWxwZXJzL2luZGV4JztcbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnbmd4LWRoaXMyLXRhYmxlLWxpc3QnLFxuICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICA8ZGl2IGNsYXNzPVwiY29sLTEyXCIgKm5nRm9yPVwibGV0IHRhYmxlTGF5ZXIgb2YgdGFibGVMYXllcnNcIj5cbiAgICAgICAgPG5neC1kaGlzMi10YWJsZS1pdGVtIFthbmFseXRpY3NPYmplY3RdPVwidGFibGVMYXllci5hbmFseXRpY3NPYmplY3RcIiBbdGFibGVDb25maWd1cmF0aW9uXT1cInRhYmxlTGF5ZXIudGFibGVDb25maWd1cmF0aW9uXCI+XG4gICAgICAgIDwvbmd4LWRoaXMyLXRhYmxlLWl0ZW0+XG4gICAgPC9kaXY+XG48L2Rpdj5gLFxuICBzdHlsZXM6IFtgYF1cbn0pXG5leHBvcnQgY2xhc3MgVGFibGVMaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgdmlzdWFsaXphdGlvbkxheWVyczogYW55W107XG4gIEBJbnB1dCgpIHZpc3VhbGl6YXRpb25UeXBlOiBzdHJpbmc7XG4gIHRhYmxlTGF5ZXJzOiBBcnJheTx7XG4gICAgdGFibGVDb25maWd1cmF0aW9uOiBUYWJsZUNvbmZpZ3VyYXRpb247XG4gICAgYW5hbHl0aWNzT2JqZWN0OiBhbnk7XG4gIH0+ID0gW107XG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy52aXN1YWxpemF0aW9uTGF5ZXJzICYmIHRoaXMudmlzdWFsaXphdGlvbkxheWVycy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnRhYmxlTGF5ZXJzID0gdGhpcy52aXN1YWxpemF0aW9uTGF5ZXJzLm1hcCgobGF5ZXI6IGFueSkgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRhYmxlQ29uZmlndXJhdGlvbjogZ2V0VGFibGVDb25maWd1cmF0aW9uKFxuICAgICAgICAgICAgbGF5ZXIuY29uZmlnIHx8IHt9LFxuICAgICAgICAgICAgbGF5ZXIubGF5b3V0LFxuICAgICAgICAgICAgdGhpcy52aXN1YWxpemF0aW9uVHlwZVxuICAgICAgICAgICksXG4gICAgICAgICAgYW5hbHl0aWNzT2JqZWN0OiBsYXllci5hbmFseXRpY3NcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIl19