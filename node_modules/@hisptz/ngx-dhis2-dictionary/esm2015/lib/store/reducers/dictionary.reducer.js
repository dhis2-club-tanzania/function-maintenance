/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { createEntityAdapter } from '@ngrx/entity';
import { createFeatureSelector } from '@ngrx/store';
import { DictionaryActionTypes } from '../actions/dictionary.actions';
/**
 * @record
 */
export function DictionaryState() { }
function DictionaryState_tsickle_Closure_declarations() {
}
export const /** @type {?} */ dictionaryAdapter = createEntityAdapter();
const /** @type {?} */ initialState = dictionaryAdapter.getInitialState({});
/**
 * @param {?=} state
 * @param {?=} action
 * @return {?}
 */
export function dictionaryReducer(state = initialState, action) {
    switch (action.type) {
        case DictionaryActionTypes.AddDictionaryMetadataList: {
            return dictionaryAdapter.addMany(action.dictionaryMetadataList, state);
        }
        case DictionaryActionTypes.UpdateDictionaryMetadata: {
            return dictionaryAdapter.updateOne({ id: action.dictionaryMetadataId, changes: action.changes }, state);
        }
    }
    return state;
}
export const /** @type {?} */ getDictionaryState = createFeatureSelector('dictionary');
export const { selectEntities: getDictionaryMetadataEntities } = dictionaryAdapter.getSelectors(getDictionaryState);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGljdGlvbmFyeS5yZWR1Y2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGhpc3B0ei9uZ3gtZGhpczItZGljdGlvbmFyeS8iLCJzb3VyY2VzIjpbImxpYi9zdG9yZS9yZWR1Y2Vycy9kaWN0aW9uYXJ5LnJlZHVjZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBOEIsbUJBQW1CLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFvQixNQUFNLGFBQWEsQ0FBQztBQUV0RSxPQUFPLEVBRUwscUJBQXFCLEVBQ3RCLE1BQU0sK0JBQStCLENBQUM7Ozs7Ozs7QUFNdkMsTUFBTSxDQUFDLHVCQUFNLGlCQUFpQixHQUUxQixtQkFBbUIsRUFBc0IsQ0FBQztBQUU5Qyx1QkFBTSxZQUFZLEdBQW9CLGlCQUFpQixDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQzs7Ozs7O0FBRTVFLE1BQU0sNEJBQ0osUUFBeUIsWUFBWSxFQUNyQyxNQUF5QjtJQUV6QixNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQixLQUFLLHFCQUFxQixDQUFDLHlCQUF5QixFQUFFLENBQUM7WUFDckQsTUFBTSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsc0JBQXNCLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDeEU7UUFDRCxLQUFLLHFCQUFxQixDQUFDLHdCQUF3QixFQUFFLENBQUM7WUFDcEQsTUFBTSxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FDaEMsRUFBRSxFQUFFLEVBQUUsTUFBTSxDQUFDLG9CQUFvQixFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxFQUFFLEVBQzVELEtBQUssQ0FDTixDQUFDO1NBQ0g7S0FDRjtJQUVELE1BQU0sQ0FBQyxLQUFLLENBQUM7Q0FDZDtBQUVELE1BQU0sQ0FBQyx1QkFBTSxrQkFBa0IsR0FBRyxxQkFBcUIsQ0FDckQsWUFBWSxDQUNiLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxFQUNYLGNBQWMsRUFBRSw2QkFBNkIsRUFDOUMsR0FBRyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsa0JBQWtCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eVN0YXRlLCBFbnRpdHlBZGFwdGVyLCBjcmVhdGVFbnRpdHlBZGFwdGVyIH0gZnJvbSAnQG5ncngvZW50aXR5JztcbmltcG9ydCB7IGNyZWF0ZUZlYXR1cmVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IERpY3Rpb25hcnkgfSBmcm9tICdAbmdyeC9lbnRpdHkvc3JjL21vZGVscyc7XG5pbXBvcnQge1xuICBEaWN0aW9uYXJ5QWN0aW9ucyxcbiAgRGljdGlvbmFyeUFjdGlvblR5cGVzXG59IGZyb20gJy4uL2FjdGlvbnMvZGljdGlvbmFyeS5hY3Rpb25zJztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IE1ldGFkYXRhRGljdGlvbmFyeSB9IGZyb20gJy4uLy4uL21vZGVscy9kaWN0aW9uYXJ5JztcblxuZXhwb3J0IGludGVyZmFjZSBEaWN0aW9uYXJ5U3RhdGUgZXh0ZW5kcyBFbnRpdHlTdGF0ZTxNZXRhZGF0YURpY3Rpb25hcnk+IHt9XG5cbmV4cG9ydCBjb25zdCBkaWN0aW9uYXJ5QWRhcHRlcjogRW50aXR5QWRhcHRlcjxcbiAgTWV0YWRhdGFEaWN0aW9uYXJ5XG4+ID0gY3JlYXRlRW50aXR5QWRhcHRlcjxNZXRhZGF0YURpY3Rpb25hcnk+KCk7XG5cbmNvbnN0IGluaXRpYWxTdGF0ZTogRGljdGlvbmFyeVN0YXRlID0gZGljdGlvbmFyeUFkYXB0ZXIuZ2V0SW5pdGlhbFN0YXRlKHt9KTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRpY3Rpb25hcnlSZWR1Y2VyKFxuICBzdGF0ZTogRGljdGlvbmFyeVN0YXRlID0gaW5pdGlhbFN0YXRlLFxuICBhY3Rpb246IERpY3Rpb25hcnlBY3Rpb25zXG4pOiBEaWN0aW9uYXJ5U3RhdGUge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBEaWN0aW9uYXJ5QWN0aW9uVHlwZXMuQWRkRGljdGlvbmFyeU1ldGFkYXRhTGlzdDoge1xuICAgICAgcmV0dXJuIGRpY3Rpb25hcnlBZGFwdGVyLmFkZE1hbnkoYWN0aW9uLmRpY3Rpb25hcnlNZXRhZGF0YUxpc3QsIHN0YXRlKTtcbiAgICB9XG4gICAgY2FzZSBEaWN0aW9uYXJ5QWN0aW9uVHlwZXMuVXBkYXRlRGljdGlvbmFyeU1ldGFkYXRhOiB7XG4gICAgICByZXR1cm4gZGljdGlvbmFyeUFkYXB0ZXIudXBkYXRlT25lKFxuICAgICAgICB7IGlkOiBhY3Rpb24uZGljdGlvbmFyeU1ldGFkYXRhSWQsIGNoYW5nZXM6IGFjdGlvbi5jaGFuZ2VzIH0sXG4gICAgICAgIHN0YXRlXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdGF0ZTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldERpY3Rpb25hcnlTdGF0ZSA9IGNyZWF0ZUZlYXR1cmVTZWxlY3RvcjxEaWN0aW9uYXJ5U3RhdGU+KFxuICAnZGljdGlvbmFyeSdcbik7XG5cbmV4cG9ydCBjb25zdCB7XG4gIHNlbGVjdEVudGl0aWVzOiBnZXREaWN0aW9uYXJ5TWV0YWRhdGFFbnRpdGllc1xufSA9IGRpY3Rpb25hcnlBZGFwdGVyLmdldFNlbGVjdG9ycyhnZXREaWN0aW9uYXJ5U3RhdGUpO1xuIl19