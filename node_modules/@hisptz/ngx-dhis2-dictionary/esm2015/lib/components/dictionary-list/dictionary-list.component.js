/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { Store } from '@ngrx/store';
import { getDictionaryList } from '../../store/selectors/dictionary.selectors';
import { InitializeDictionaryMetadataAction } from '../../store/actions/dictionary.actions';
export class DictionaryListComponent {
    /**
     * @param {?} store
     */
    constructor(store) {
        this.store = store;
        this.activeItem = 0;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.metadataIdentifiers.length > 0) {
            this.store.dispatch(new InitializeDictionaryMetadataAction(this.metadataIdentifiers));
            this.dictionaryList$ = this.store.select(getDictionaryList(this.metadataIdentifiers));
        }
    }
    /**
     * @param {?} index
     * @param {?} e
     * @return {?}
     */
    setActiveItem(index, e) {
        e.stopPropagation();
        if (this.activeItem === index) {
            this.activeItem = -1;
        }
        else {
            this.activeItem = index;
        }
    }
}
DictionaryListComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'ngx-dhis2-dictionary-list',
                template: `<div class="dictionary-list-container">
  <div
    class="dictionary-item-container"
    *ngFor="let dictionaryItem of dictionaryList$ | async; let i = index"
  >
    <div
      class="dictionary-title"
      (click)="setActiveItem(i, $event)"
    >
      <span>{{ dictionaryItem.name }}</span>
      <div *ngIf="!dictionaryItem.name">
        <app-dictionary-progress></app-dictionary-progress>
      </div>
    </div>
    <div
      class="dictionary-body"
      *ngIf="activeItem === i"
    >
      <div class="dictionary-description" [innerHtml]="dictionaryItem.description"></div>
      <div *ngIf="dictionaryItem.progress.loading">
        <app-dictionary-progress></app-dictionary-progress>
      </div>
    </div>
  </div>
</div>
`,
                styles: [`.dictionary-list-container{box-shadow:0 0 3px rgba(0,0,0,.3)}.dictionary-item-container{border-bottom:thin solid #ececec}.dictionary-title{padding:5px 10px;cursor:pointer}.dictionary-item-container:last-child{border-bottom-style:none}.dictionary-body{border-top:thin solid #ececec;padding:10px}.dictionary-description{text-align:justify}`],
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
DictionaryListComponent.ctorParameters = () => [
    { type: Store }
];
DictionaryListComponent.propDecorators = {
    metadataIdentifiers: [{ type: Input }]
};
function DictionaryListComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    DictionaryListComponent.prototype.metadataIdentifiers;
    /** @type {?} */
    DictionaryListComponent.prototype.dictionaryList$;
    /** @type {?} */
    DictionaryListComponent.prototype.activeItem;
    /** @type {?} */
    DictionaryListComponent.prototype.store;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGljdGlvbmFyeS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BoaXNwdHovbmd4LWRoaXMyLWRpY3Rpb25hcnkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9kaWN0aW9uYXJ5LWxpc3QvZGljdGlvbmFyeS1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUVOLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFNcEMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFrQzVGLE1BQU07Ozs7SUFLSixZQUFvQixLQUE2QjtRQUE3QixVQUFLLEdBQUwsS0FBSyxDQUF3QjtRQUMvQyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztLQUNyQjs7OztJQUVELFFBQVE7UUFDTixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQ2pCLElBQUksa0NBQWtDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQ2pFLENBQUM7WUFFRixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUN0QyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FDNUMsQ0FBQztTQUNIO0tBQ0Y7Ozs7OztJQUVELGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNwQixDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDcEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQzlCLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDdEI7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1NBQ3pCO0tBQ0Y7OztZQTVERixTQUFTLFNBQUM7O2dCQUVULFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXlCWDtnQkFDQyxNQUFNLEVBQUUsQ0FBQyxtVkFBbVYsQ0FBQztnQkFDN1YsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDaEQ7Ozs7WUF4Q1EsS0FBSzs7O2tDQTBDWCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIE9uSW5pdFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTWV0YWRhdGFEaWN0aW9uYXJ5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL2RpY3Rpb25hcnknO1xuXG5pbXBvcnQgeyBEaWN0aW9uYXJ5U3RhdGUgfSBmcm9tICcuLi8uLi9zdG9yZS9yZWR1Y2Vycy9kaWN0aW9uYXJ5LnJlZHVjZXInO1xuaW1wb3J0IHsgZ2V0RGljdGlvbmFyeUxpc3QgfSBmcm9tICcuLi8uLi9zdG9yZS9zZWxlY3RvcnMvZGljdGlvbmFyeS5zZWxlY3RvcnMnO1xuaW1wb3J0IHsgSW5pdGlhbGl6ZURpY3Rpb25hcnlNZXRhZGF0YUFjdGlvbiB9IGZyb20gJy4uLy4uL3N0b3JlL2FjdGlvbnMvZGljdGlvbmFyeS5hY3Rpb25zJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICduZ3gtZGhpczItZGljdGlvbmFyeS1saXN0JyxcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwiZGljdGlvbmFyeS1saXN0LWNvbnRhaW5lclwiPlxuICA8ZGl2XG4gICAgY2xhc3M9XCJkaWN0aW9uYXJ5LWl0ZW0tY29udGFpbmVyXCJcbiAgICAqbmdGb3I9XCJsZXQgZGljdGlvbmFyeUl0ZW0gb2YgZGljdGlvbmFyeUxpc3QkIHwgYXN5bmM7IGxldCBpID0gaW5kZXhcIlxuICA+XG4gICAgPGRpdlxuICAgICAgY2xhc3M9XCJkaWN0aW9uYXJ5LXRpdGxlXCJcbiAgICAgIChjbGljayk9XCJzZXRBY3RpdmVJdGVtKGksICRldmVudClcIlxuICAgID5cbiAgICAgIDxzcGFuPnt7IGRpY3Rpb25hcnlJdGVtLm5hbWUgfX08L3NwYW4+XG4gICAgICA8ZGl2ICpuZ0lmPVwiIWRpY3Rpb25hcnlJdGVtLm5hbWVcIj5cbiAgICAgICAgPGFwcC1kaWN0aW9uYXJ5LXByb2dyZXNzPjwvYXBwLWRpY3Rpb25hcnktcHJvZ3Jlc3M+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cImRpY3Rpb25hcnktYm9keVwiXG4gICAgICAqbmdJZj1cImFjdGl2ZUl0ZW0gPT09IGlcIlxuICAgID5cbiAgICAgIDxkaXYgY2xhc3M9XCJkaWN0aW9uYXJ5LWRlc2NyaXB0aW9uXCIgW2lubmVySHRtbF09XCJkaWN0aW9uYXJ5SXRlbS5kZXNjcmlwdGlvblwiPjwvZGl2PlxuICAgICAgPGRpdiAqbmdJZj1cImRpY3Rpb25hcnlJdGVtLnByb2dyZXNzLmxvYWRpbmdcIj5cbiAgICAgICAgPGFwcC1kaWN0aW9uYXJ5LXByb2dyZXNzPjwvYXBwLWRpY3Rpb25hcnktcHJvZ3Jlc3M+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbmAsXG4gIHN0eWxlczogW2AuZGljdGlvbmFyeS1saXN0LWNvbnRhaW5lcntib3gtc2hhZG93OjAgMCAzcHggcmdiYSgwLDAsMCwuMyl9LmRpY3Rpb25hcnktaXRlbS1jb250YWluZXJ7Ym9yZGVyLWJvdHRvbTp0aGluIHNvbGlkICNlY2VjZWN9LmRpY3Rpb25hcnktdGl0bGV7cGFkZGluZzo1cHggMTBweDtjdXJzb3I6cG9pbnRlcn0uZGljdGlvbmFyeS1pdGVtLWNvbnRhaW5lcjpsYXN0LWNoaWxke2JvcmRlci1ib3R0b20tc3R5bGU6bm9uZX0uZGljdGlvbmFyeS1ib2R5e2JvcmRlci10b3A6dGhpbiBzb2xpZCAjZWNlY2VjO3BhZGRpbmc6MTBweH0uZGljdGlvbmFyeS1kZXNjcmlwdGlvbnt0ZXh0LWFsaWduOmp1c3RpZnl9YF0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIERpY3Rpb25hcnlMaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgbWV0YWRhdGFJZGVudGlmaWVyczogQXJyYXk8c3RyaW5nPjtcbiAgZGljdGlvbmFyeUxpc3QkOiBPYnNlcnZhYmxlPE1ldGFkYXRhRGljdGlvbmFyeVtdPjtcbiAgYWN0aXZlSXRlbTogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc3RvcmU6IFN0b3JlPERpY3Rpb25hcnlTdGF0ZT4pIHtcbiAgICB0aGlzLmFjdGl2ZUl0ZW0gPSAwO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMubWV0YWRhdGFJZGVudGlmaWVycy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKFxuICAgICAgICBuZXcgSW5pdGlhbGl6ZURpY3Rpb25hcnlNZXRhZGF0YUFjdGlvbih0aGlzLm1ldGFkYXRhSWRlbnRpZmllcnMpXG4gICAgICApO1xuXG4gICAgICB0aGlzLmRpY3Rpb25hcnlMaXN0JCA9IHRoaXMuc3RvcmUuc2VsZWN0KFxuICAgICAgICBnZXREaWN0aW9uYXJ5TGlzdCh0aGlzLm1ldGFkYXRhSWRlbnRpZmllcnMpXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHNldEFjdGl2ZUl0ZW0oaW5kZXgsIGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGlmICh0aGlzLmFjdGl2ZUl0ZW0gPT09IGluZGV4KSB7XG4gICAgICB0aGlzLmFjdGl2ZUl0ZW0gPSAtMTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hY3RpdmVJdGVtID0gaW5kZXg7XG4gICAgfVxuICB9XG59XG4iXX0=