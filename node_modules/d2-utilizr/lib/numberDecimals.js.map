{"version":3,"sources":["../src/numberDecimals.js"],"names":["numberDecimals","number","abs","Math","tmp","count","pow"],"mappings":";;;;;kBASwBA,c;;AATxB;;;;AACA;;;;;;AAEA;;;;;;AAMe,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC3C,QAAMC,MAAMC,KAAKD,GAAL,CAASD,MAAT,CAAZ;AACA,QAAIG,MAAMF,GAAV;AACA,QAAIG,QAAQ,CAAZ;;AAEA,WAAO,CAAE,yBAAUD,GAAV,CAAF,IAAoB,8BAAeA,GAAf,CAA3B,EAAgD;AAC5CA,cAAMF,MAAMC,KAAKG,GAAL,CAAS,EAAT,EAAaD,OAAb,CAAZ;AACH;;AAED,WAAOA,QAAQ,CAAf;AACH","file":"numberDecimals.js","sourcesContent":["import numberIsFinite from './numberIsFinite';\nimport isInteger from './isInteger';\n\n/**\n * Returns the number of decimal places in a number\n *\n * @param {Number} number The number to be checked\n * @returns {Number} The number of decimal places in the given number\n */\nexport default function numberDecimals(number) {\n    const abs = Math.abs(number);\n    let tmp = abs;\n    let count = 1;\n\n    while (! isInteger(tmp) && numberIsFinite(tmp)) {\n        tmp = abs * Math.pow(10, count++);\n    }\n\n    return count - 1;\n}\n"]}