{"version":3,"sources":["../src/arrayPluck.js"],"names":["arrayPluck","array","propertyName","newArray","i","len","item","length","push"],"mappings":";;;;;kBAoBwBA,U;AApBxB;;;;;;;;;;;;;;;;;;;;AAoBe,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,YAA3B,EAAyC;AACpD,QAAIC,WAAW,EAAf;AACA,QAAIC,CAAJ;AACA,QAAIC,GAAJ;AACA,QAAIC,IAAJ;;AAEA,SAAKF,IAAI,CAAJ,EAAOC,MAAMJ,MAAMM,MAAxB,EAAgCH,IAAIC,GAApC,EAAyCD,GAAzC,EAA8C;AAC1CE,eAAOL,MAAMG,CAAN,CAAP;;AAEAD,iBAASK,IAAT,CAAcF,KAAKJ,YAAL,CAAd;AACH;;AAED,WAAOC,QAAP;AACH","file":"arrayPluck.js","sourcesContent":["/**\n *\n * @param {Array} array\n * @param {string|number} propertyName The property of the\n * @returns {Array}\n *\n * @throws {TypeError} When the `propertyName` can not be found on an item in the `array`. This generally happens when a value in the array is `null` or `undefined`\n *\n * @example\n * const values = [{name: 'John'}, {name: 'James'}];\n * arrayPluck(values, 'name') // returns: ['John', 'James']\n *\n * @example\n * const values = [{name: 'John'}, {}, {name: 'James'}];\n * arrayPluck(values, 'name') // returns: ['John', undefined, 'James']\n *\n * @example\n * const values = [undefined, {name: 'James'}];\n * arrayPluck(values, 'name') // throws: Cannot read property 'name' of undefined\n */\nexport default function arrayPluck(array, propertyName) {\n    var newArray = [];\n    var i;\n    var len;\n    var item;\n\n    for (i = 0, len = array.length; i < len; i++) {\n        item = array[i];\n\n        newArray.push(item[propertyName]);\n    }\n\n    return newArray;\n}\n"]}