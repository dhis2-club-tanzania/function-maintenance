{"version":3,"sources":["../src/arrayMax.js"],"names":["arrayMax","array","comparisonFn","i","ln","length","item","max"],"mappings":";;;;;kBAewBA,Q;AAfxB;;;;;;;;;;;;;;;AAee,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,YAAzB,EAAuC;AAClD,QAAIC,IAAI,CAAR;AAAA,QACIC,KAAKH,MAAMI,MADf;AAAA,QAEIC,IAFJ;AAAA,QAGIC,MAAMN,MAAM,CAAN,CAHV;;AAKA,WAAOE,IAAIC,EAAX,EAAeD,GAAf,EAAoB;AAChBG,eAAOL,MAAME,CAAN,CAAP;;AAEA,YAAID,YAAJ,EAAkB;AACd,gBAAIA,aAAaK,GAAb,EAAkBD,IAAlB,MAA4B,CAAC,CAAjC,EAAoC;AAChCC,sBAAMD,IAAN;AACH;AACJ,SAJD,MAKK;AACD,gBAAIA,OAAOC,GAAX,EAAgB;AACZA,sBAAMD,IAAN;AACH;AACJ;AACJ;;AAED,WAAOC,GAAP;AACH","file":"arrayMax.js","sourcesContent":["/**\n * Return the highest value (number) in the given array\n *\n * @param {Array} array The array to be scanned\n * @returns {Array} The highest value\n *\n * @throws {TypeError} When the passed array is not actually an array.\n *\n * @example\n * const sourceArray = [1,3,2];\n * arrayMax(sourceArray); // Returns: 3\n *\n * @example\n * arrayClean() // throws: Cannot read property 'length' of undefined\n */\nexport default function arrayMax(array, comparisonFn) {\n    var i = 0,\n        ln = array.length,\n        item,\n        max = array[0];        \n\n    for (; i < ln; i++) {\n        item = array[i];\n\n        if (comparisonFn) {\n            if (comparisonFn(max, item) === -1) {\n                max = item;\n            }\n        }\n        else {\n            if (item > max) {\n                max = item;\n            }\n        }\n    }\n\n    return max;\n}\n"]}