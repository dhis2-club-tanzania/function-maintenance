{"version":3,"sources":["../src/arrayReplace.js"],"names":["arrayReplace","array","index","removeCount","insert","length","splice","apply","concat","push"],"mappings":";;;;;kBAawBA,Y;AAbxB;;;;;;;;;;;;;AAae,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,WAApC,EAAiDC,MAAjD,EAAyD;AACpE,QAAIA,UAAUA,OAAOC,MAArB,EAA6B;AACzB,YAAIH,QAAQD,MAAMI,MAAlB,EAA0B;AACtBJ,kBAAMK,MAAN,CAAaC,KAAb,CAAmBN,KAAnB,EAA0B,CAACC,KAAD,EAAQC,WAAR,EAAqBK,MAArB,CAA4BJ,MAA5B,CAA1B;AACH,SAFD,MAEO;AACHH,kBAAMQ,IAAN,CAAWF,KAAX,CAAiBN,KAAjB,EAAwBG,MAAxB;AACH;AACJ,KAND,MAMO;AACHH,cAAMK,MAAN,CAAaJ,KAAb,EAAoBC,WAApB;AACH;AACD,WAAOF,KAAP;AACH","file":"arrayReplace.js","sourcesContent":["/**\n * Replace values in an array with given values or remove values from an array.\n *\n * @param {Array} array The array where the values should be replaced\n * @param {number} index The index in the array where to start the replacement\n * @param {number} removeCount The number of items to remove\n * @param {*} insert The item(s) to be inserted\n * @returns {Array} The array with the replaced values\n *\n * @example\n * const sourceArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n * arrayReplace(sourceArray, 0, 5, ['a', 'b', 'c', 'd']); // Returns: ['a', 'b', 'c', 'd', 6, 7, 8, 9, 10]\n */\nexport default function arrayReplace(array, index, removeCount, insert) {\n    if (insert && insert.length) {\n        if (index < array.length) {\n            array.splice.apply(array, [index, removeCount].concat(insert));\n        } else {\n            array.push.apply(array, insert);\n        }\n    } else {\n        array.splice(index, removeCount);\n    }\n    return array;\n}\n"]}