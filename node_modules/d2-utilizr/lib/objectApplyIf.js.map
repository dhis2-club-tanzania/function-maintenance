{"version":3,"sources":["../src/objectApplyIf.js"],"names":["objectApplyIf","object","config","property","undefined"],"mappings":";;;;;kBAYwBA,a;AAZxB;;;;;;;;;;;;AAYe,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AAClD,QAAIC,QAAJ;;AAEA,QAAIF,MAAJ,EAAY;AACR,aAAKE,QAAL,IAAiBD,MAAjB,EAAyB;AACrB,gBAAID,OAAOE,QAAP,MAAqBC,SAAzB,EAAoC;AAChCH,uBAAOE,QAAP,IAAmBD,OAAOC,QAAP,CAAnB;AACH;AACJ;AACJ;;AAED,WAAOF,MAAP;AACH","file":"objectApplyIf.js","sourcesContent":["/**\n * Applies properties from \"config\" if they are undefined in \"object.\n *\n * @param {Object} object The object to receive properties\n * @param {Object} config The object to pass properties\n * @returns {Object} The object that may have received properties\n *\n * @example\n * let object = {id: 1}\n * const config = {id: 2, name: 'Name'}\n * objectApplyIf(object, config); // returns: {id: 1, name: 'Name'}\n */\nexport default function objectApplyIf(object, config) {\n    var property;\n\n    if (object) {\n        for (property in config) {\n            if (object[property] === undefined) {\n                object[property] = config[property];\n            }\n        }\n    }\n\n    return object;\n}\n"]}