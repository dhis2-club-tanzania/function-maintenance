{"version":3,"sources":["../src/numberToFixed.js"],"names":["numberToFixed","fixedToFixed","value","precision","pow","math","round","toFixed","standardToFixed"],"mappings":";;;;;AAAA;;;;;;;AAOA,IAAMA,gBAAgB,YAAW;AAC7B,aAASC,YAAT,CAAsBC,KAAtB,EAA6BC,SAA7B,EAAwC;AACpCA,oBAAYA,aAAa,CAAzB;;AAEA,YAAIC,MAAMC,KAAKD,GAAL,CAAS,EAAT,EAAaD,SAAb,CAAV;AACA,eAAO,CAACE,KAAKC,KAAL,CAAWJ,QAAQE,GAAnB,IAA0BA,GAA3B,EAAgCG,OAAhC,CAAwCJ,SAAxC,CAAP;AACH;;AAED,aAASK,eAAT,CAAyBN,KAAzB,EAAgCC,SAAhC,EAA2C;AACvCA,oBAAYA,aAAa,CAAzB;;AAEA,eAAOD,MAAMK,OAAN,CAAcJ,SAAd,CAAP;AACH;;AAED;AACA;AACA,WAAOK,eAAP;AACH,CAjBqB,EAAtB;;kBAmBeR,a","file":"numberToFixed.js","sourcesContent":["/**\n * Fixes the number to a certain amount of decimals\n *\n * @param {Number} value The value to apply the function to\n * @param {Number} [precision=0] The amount of decimal digits to fix to\n * @returns {String} The \"fixed\" number with the specified amount of decimals\n */\nconst numberToFixed = function() {\n    function fixedToFixed(value, precision) {\n        precision = precision || 0;\n\n        var pow = math.pow(10, precision);\n        return (math.round(value * pow) / pow).toFixed(precision);\n    }\n\n    function standardToFixed(value, precision) {\n        precision = precision || 0;\n\n        return value.toFixed(precision);\n    }\n\n    // TODO: The \"broken\" toFixed is not easy to test? Should check if still relevant.\n    // return ((0.9).toFixed() !== '1') ? fixedToFixed : standardToFixed;\n    return standardToFixed;\n}();\n\nexport default numberToFixed;\n"]}