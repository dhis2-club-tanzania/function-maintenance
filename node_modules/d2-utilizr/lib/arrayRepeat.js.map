{"version":3,"sources":["../src/arrayRepeat.js"],"names":["arrayRepeat","array","n","byIndex","newArray","i","length","j","push"],"mappings":";;;;;kBAiBwBA,W;;;;AAjBxB;;;;;;;;;;;;;;;;;AAiBe,SAASA,WAAT,CAAqBC,KAArB,EAAgD;AAAA,QAApBC,CAAoB,uEAAlB,CAAkB;AAAA,QAAfC,OAAe,uEAAP,KAAO;;;AAE3D,QAAI,OAAOF,KAAP,KAAiB,WAArB,EAAkC;AAC9B;AACH;;AAED,QAAIG,WAAW,EAAf;;AAEA,QAAID,OAAJ,EAAa;;AAET,aAAK,IAAIE,IAAE,CAAX,EAAcA,IAAEJ,MAAMK,MAAtB,EAA8BD,GAA9B,EAAmC;AAC/B,iBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIL,CAApB,EAAuBK,GAAvB,EAA4B;AACxBH,yBAASI,IAAT,CAAcP,MAAMI,CAAN,CAAd;AACH;AACJ;;AAED,eAAOD,QAAP;AACH;;AAED,SAAK,IAAIC,KAAE,CAAX,EAAcA,KAAEH,CAAhB,EAAmBG,IAAnB,EAAwB;AACpBD,iBAASI,IAAT,oCAAiBP,KAAjB;AACH;;AAED,WAAOG,QAAP;AACH","file":"arrayRepeat.js","sourcesContent":["/**\n * \n * Repeats content of array by structure or by index, returns flattened array.\n * \n * @param   {array}   array \n * @param   {number}  n \n * @param   {boolean} [byIndex=false] \n * @returns {array}\n *\n * @example\n * const values = [1, 2, 3];\n * arrayRepeat(values, 3) // returns: [1, 2, 3, 1, 2, 3, 1, 2, 3]\n *\n * @example\n * const values = [1, 2, 3];\n * arrayRepeat(values, 3, true) // returns: [1, 1, 1, 2, 2, 2, 3, 3, 3]\n */\nexport default function arrayRepeat(array, n=1, byIndex=false) {\n    \n    if (typeof array === 'undefined') {\n        throw `Cannot repeat array of type undefined`;\n    }\n\n    let newArray = [];\n\n    if (byIndex) {\n\n        for (let i=0; i<array.length; i++) {            \n            for (let j = 0; j < n; j++) {\n                newArray.push(array[i]);\n            }\n        }\n        \n        return newArray\n    }\n\n    for (let i=0; i<n; i++) {\n        newArray.push(...array);\n    }\n\n    return newArray\n};\n\n"]}