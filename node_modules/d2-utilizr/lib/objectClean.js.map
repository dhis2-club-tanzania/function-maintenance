{"version":3,"sources":["../src/objectClean.js"],"names":["cleanObject","object","isEmptyFn","Object","keys","reduce","acc","key"],"mappings":";;;;;kBAcwBA,W;;AAdxB;;;;;;AAEA;;;;;;;;;;;;AAYe,SAASA,WAAT,CAAqBC,MAArB,EAAkD;AAAA,QAArBC,SAAqB;;AAC7D,WAAOC,OACFC,IADE,CACGH,MADH,EAEFI,MAFE,CAEK,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClB,YAAI,CAACL,UAAUD,OAAOM,GAAP,CAAV,CAAL,EAA6B;AACzBD,gBAAIC,GAAJ,IAAWN,OAAOM,GAAP,CAAX;AACH;AACL,eAAOD,GAAP;AACH,KAPM,EAOJ,EAPI,CAAP;AAQH","file":"objectClean.js","sourcesContent":["import isEmpty from './isEmpty';\n\n/**\n * Applies properties from \"config\" if they are undefined in \"object.\n *\n * @param {Object} object The object to be cleaned\n * @param {Function} isEmptyFn Optional isEmpty function\n * @returns {Object} A new cleaned object\n *\n * @example\n * let object = {id: 1, name: undefined}\n * objectClean(object); // returns: {id: 1}\n */\n\nexport default function cleanObject(object, isEmptyFn = isEmpty) {\n    return Object\n        .keys(object)\n        .reduce((acc, key) => {\n            if (!isEmptyFn(object[key]))Â {\n                acc[key] = object[key];\n            }\n        return acc;\n    }, {});\n}\n"]}